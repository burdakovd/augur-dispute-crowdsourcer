{
  "contractName": "Disputer",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "m_params",
      "outputs": [
        {
          "name": "market",
          "type": "address"
        },
        {
          "name": "feeWindowId",
          "type": "uint256"
        },
        {
          "name": "invalid",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDisputeTokenAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "m_feeReceiver",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getREP",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "feeReceiver",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "approveManagerToSpendDisputeTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "hasDisputed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "m_owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "market",
          "type": "address"
        },
        {
          "name": "feeWindowId",
          "type": "uint256"
        },
        {
          "name": "payoutNumerators",
          "type": "uint256[]"
        },
        {
          "name": "invalid",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "feeReceiver",
          "type": "address"
        }
      ],
      "name": "dispute",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806315298c77146100a95780632e6027521461011257806355af7a83146101695780636f2c83ee146101c0578063893d20e814610217578063b3f006741461026e578063cadbbf63146102c5578063d18959a2146102dc578063deff41c11461030b578063f75f9f7b14610362575b600080fd5b3480156100b557600080fd5b506100be6103a5565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001935050505060405180910390f35b34801561011e57600080fd5b506101276103ea565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561017557600080fd5b5061017e610471565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101cc57600080fd5b506101d5610497565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561022357600080fd5b5061022c6104c1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561027a57600080fd5b506102836104ea565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102d157600080fd5b506102da61055b565b005b3480156102e857600080fd5b506102f1610694565b604051808215151515815260200191505060405180910390f35b34801561031757600080fd5b506103206106d7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036e57600080fd5b506103a3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106fc565b005b60028060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060030160009054906101000a900460ff16905083565b60003073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561044957600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561053357600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006105656103ea565b90508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b36000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561064b57600080fd5b505af115801561065f573d6000803e3d6000fd5b505050506040513d602081101561067557600080fd5b8101908080519060200190929190505050151561069157600080fd5b50565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600080600080600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156107b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f43616e206f6e6c792064697370757465206f6e6365000000000000000000000081525060200191505060405180910390fd5b60008673ffffffffffffffffffffffffffffffffffffffff1614151515610843576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4d75737420686176652076616c6964206665652072656365697665720000000081525060200191505060405180910390fd5b85600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061088c610497565b94508473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561092957600080fd5b505af115801561093d573d6000803e3d6000fd5b505050506040513d602081101561095357600080fd5b810190808051906020019092919050505093508473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610a0157600080fd5b505af1158015610a15573d6000803e3d6000fd5b505050506040513d6020811015610a2b57600080fd5b81019080805190602001909291905050509250610a46610b78565b915081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610b2457600080fd5b505af1158015610b38573d6000803e3d6000fd5b505050506040513d6020811015610b4e57600080fd5b810190808051906020019092919050505090508381840110151515610b6f57fe5b50505050505050565b6000801515610b8357fe5b905600a165627a7a723058201f77042402be151f7f1fa7eba90f434336bb425d1509c81d8aff1d515029b8570029",
  "sourceMap": "311:1588:5:-;;;277:1:2;246:32;;;;;;;;;;;;;;;;;;;;349:211:5;8:9:-1;5:2;;;30:1;27;20:12;5:2;349:211:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;492:63;501:5;508:6;516:11;529:16;547:7;492:8;;;:63;;;:::i;:::-;349:211;;;;;311:1588;;472:616:2;633:5;623:7;;:15;;;;;;;;;;;;;;;;;;655:99;;;;;;;;;684:6;655:99;;;;;;698:11;655:99;;;;717:16;655:99;;;;741:7;655:99;;;;;644:8;:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;872:12;:10;;;:12;;;:::i;:::-;864:5;;:20;;;;;;;;;;;;;;;;;;897:5;;;;;;;;;;;:13;;;911:7;;;;;;;;;;;920:10;897:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;897:34:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;897:34:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;897:34:2;;;;;;;;;;;;;;;;890:42;;;;;;1077:4;1045:14;;:38;;;;;;;;;;;;;;;;;;472:616;;;;;:::o;1639:119:5:-;1684:6;1705:5;1698:13;;;;;;1639:119;:::o;311:1588::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "311:1588:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;282:37:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;282:37:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2480:149;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2480:149:2;;;;;;;;;;;;;;;;;;;;;;;;;;;246:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;246:32:2;;;;;;;;;;;;;;;;;;;;;;;;;;;2406:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2406:70:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1092:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1092:77:2;;;;;;;;;;;;;;;;;;;;;;;;;;;2028:119;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2028:119:2;;;;;;;;;;;;;;;;;;;;;;;;;;;2220:182;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2220:182:2;;;;;;1936:88;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1936:88:2;;;;;;;;;;;;;;;;;;;;;;;;;;;220:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;220:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;760:875:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;760:875:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;282:37:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2480:149::-;2535:6;2590:4;2557:39;;:14;;;;;;;;;;;:39;;;;2549:48;;;;;;;;2610:14;;;;;;;;;;;2603:21;;2480:149;:::o;246:32::-;;;;;;;;;;;;;:::o;2406:70::-;2445:6;2466:5;;;;;;;;;;;2459:12;;2406:70;:::o;1092:77::-;1135:7;1157;;;;;;;;;;;1150:14;;1092:77;:::o;2028:119::-;2074:7;2114:1;2097:13;;;;;;;;;;;:18;;;;2089:27;;;;;;;;2129:13;;;;;;;;;;;2122:20;;2028:119;:::o;2220:182::-;2281:26;2310:24;:22;:24::i;:::-;2281:53;;2348:19;:27;;;2376:7;;;;;;;;;;;2385:10;2348:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2348:48:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2348:48:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2348:48:2;;;;;;;;;;;;;;;;2340:57;;;;;;;;2220:182;:::o;1936:88::-;1982:4;2018:1;2001:13;;;;;;;;;;;:18;;;;1994:25;;1936:88;:::o;220:22::-;;;;;;;;;;;;;:::o;760:875:5:-;830:11;1486:10:2;1513:25;1573:23;1696:19;1787:32;1356:1;1339:13;;;;;;;;;;;:18;;;1331:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1412:1;1397:11;:16;;;;1389:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1468:11;1452:13;;:27;;;;;;;;;;;;;;;;;;1499:8;:6;:8::i;:::-;1486:21;;1541:3;:13;;;1555:4;1541:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1541:19:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1541:19:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1541:19:2;;;;;;;;;;;;;;;;1513:47;;1599:3;:13;;;1613:4;1599:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1599:19:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1599:19:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1599:19:2;;;;;;;;;;;;;;;;1573:45;;1718:28;:26;:28::i;:::-;1696:50;;1769:12;1752:14;;:29;;;;;;;;;;;;;;;;;;1822:12;:22;;;1845:4;1822:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1822:28:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1822:28:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1822:28:2;;;;;;;;;;;;;;;;1787:63;;1909:17;1881:24;1863:15;:42;:63;;1856:71;;;;;;760:875:5;;;;;;;:::o;1762:135::-;1823:6;1844:5;1837:13;;;;;;1762:135;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./BaseDisputer.sol\";\nimport \"./IDisputer.sol\";\n\n/**\n * Only the code that really interacts with Augur should be place here,\n * the rest goes into BaseDisputer for better testability.\n *\n * Gotta be careful around scenario of Augur forking while disputer still holds funds.\n */\ncontract Disputer is BaseDisputer {\n  constructor(\n    address owner,\n    address market,\n    uint256 feeWindowId,\n    uint256[] payoutNumerators,\n    bool invalid\n  ) public {\n    baseInit(owner, market, feeWindowId, payoutNumerators, invalid);\n  }\n\n  /**\n   * This function should use as little gas as possible, as it will be called\n   * during rush time. Unnecessary operations are postponed for later.\n   *\n   * Can only be called once.\n   */\n  function dispute(address feeReceiver) external withDisputeBoilerplate(feeReceiver) {\n    // TODO: actually interact with Augur\n    // this part is not covered by automated tests\n    // however it will be pretty simple; the only thing we require is that it\n    // will take some REP from this contract (as many as it can)\n    // and convert it into dispute tokens\n    // some boilerplate is done in `withDisputeBoilerplate` which has test coverage\n    // if the market contract is malicious it may steal our REP and whatnot,\n    // but by choosing to interact with this crowdsourcer contract users\n    // indicate that they trust this market to do correct dispute\n    // (otherwise dispute tokens aren't worth anything anyway)\n    // If the code here crashes, it is OK, people still can withdraw.\n    // If it loses funds, `withDisputeBoilerplate` will revert transaction.\n  }\n\n  function getREPImpl() internal view returns (IERC20) {\n    assert(false);\n    // TODO: actually interact with Augur\n  }\n\n  function getDisputeTokenAddressImpl() internal view returns (IERC20) {\n    assert(false);\n    // TODO: actually interact with Augur\n  }\n}\n",
  "sourcePath": "/src/contracts/Disputer.sol",
  "ast": {
    "absolutePath": "/src/contracts/Disputer.sol",
    "exportedSymbols": {
      "Disputer": [
        1913
      ]
    },
    "id": 1914,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1856,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "/src/contracts/BaseDisputer.sol",
        "file": "./BaseDisputer.sol",
        "id": 1857,
        "nodeType": "ImportDirective",
        "scope": 1914,
        "sourceUnit": 985,
        "src": "26:28:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/src/contracts/IDisputer.sol",
        "file": "./IDisputer.sol",
        "id": 1858,
        "nodeType": "ImportDirective",
        "scope": 1914,
        "sourceUnit": 2191,
        "src": "55:25:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1859,
              "name": "BaseDisputer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 984,
              "src": "332:12:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseDisputer_$984",
                "typeString": "contract BaseDisputer"
              }
            },
            "id": 1860,
            "nodeType": "InheritanceSpecifier",
            "src": "332:12:5"
          }
        ],
        "contractDependencies": [
          984,
          2190
        ],
        "contractKind": "contract",
        "documentation": "Only the code that really interacts with Augur should be place here,\nthe rest goes into BaseDisputer for better testability.\n * Gotta be careful around scenario of Augur forking while disputer still holds funds.",
        "fullyImplemented": true,
        "id": 1913,
        "linearizedBaseContracts": [
          1913,
          984,
          2190
        ],
        "name": "Disputer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1882,
              "nodeType": "Block",
              "src": "486:74:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1875,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1862,
                        "src": "501:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1876,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1864,
                        "src": "508:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1877,
                        "name": "feeWindowId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1866,
                        "src": "516:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1878,
                        "name": "payoutNumerators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1869,
                        "src": "529:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1879,
                        "name": "invalid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1871,
                        "src": "547:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1874,
                      "name": "baseInit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 827,
                      "src": "492:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256[] memory,bool)"
                      }
                    },
                    "id": 1880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "492:63:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1881,
                  "nodeType": "ExpressionStatement",
                  "src": "492:63:5"
                }
              ]
            },
            "documentation": null,
            "id": 1883,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1862,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1883,
                  "src": "366:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "366:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1864,
                  "name": "market",
                  "nodeType": "VariableDeclaration",
                  "scope": 1883,
                  "src": "385:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "385:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1866,
                  "name": "feeWindowId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1883,
                  "src": "405:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1869,
                  "name": "payoutNumerators",
                  "nodeType": "VariableDeclaration",
                  "scope": 1883,
                  "src": "430:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1867,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "430:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1868,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "430:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1871,
                  "name": "invalid",
                  "nodeType": "VariableDeclaration",
                  "scope": 1883,
                  "src": "462:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1870,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "462:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "360:118:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1873,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "486:0:5"
            },
            "scope": 1913,
            "src": "349:211:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1891,
              "nodeType": "Block",
              "src": "843:792:5",
              "statements": []
            },
            "documentation": "This function should use as little gas as possible, as it will be called\nduring rush time. Unnecessary operations are postponed for later.\n   * Can only be called once.",
            "id": 1892,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1888,
                    "name": "feeReceiver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1885,
                    "src": "830:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1889,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1887,
                  "name": "withDisputeBoilerplate",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 902,
                  "src": "807:22:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "807:35:5"
              }
            ],
            "name": "dispute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1885,
                  "name": "feeReceiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 1892,
                  "src": "777:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1884,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "777:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "776:21:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "843:0:5"
            },
            "scope": 1913,
            "src": "760:875:5",
            "stateMutability": "nonpayable",
            "superFunction": 2166,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1901,
              "nodeType": "Block",
              "src": "1692:66:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 1898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1705:5:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1897,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3408,
                      "src": "1698:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1698:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1900,
                  "nodeType": "ExpressionStatement",
                  "src": "1698:13:5"
                }
              ]
            },
            "documentation": null,
            "id": 1902,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getREPImpl",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1658:2:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1895,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1902,
                  "src": "1684:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3404",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1894,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3404,
                    "src": "1684:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3404",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1683:8:5"
            },
            "scope": 1913,
            "src": "1639:119:5",
            "stateMutability": "view",
            "superFunction": 978,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1911,
              "nodeType": "Block",
              "src": "1831:66:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 1908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1844:5:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1907,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3408,
                      "src": "1837:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1837:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1910,
                  "nodeType": "ExpressionStatement",
                  "src": "1837:13:5"
                }
              ]
            },
            "documentation": null,
            "id": 1912,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getDisputeTokenAddressImpl",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1903,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1797:2:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1905,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1912,
                  "src": "1823:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3404",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1904,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3404,
                    "src": "1823:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3404",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1822:8:5"
            },
            "scope": 1913,
            "src": "1762:135:5",
            "stateMutability": "view",
            "superFunction": 983,
            "visibility": "internal"
          }
        ],
        "scope": 1914,
        "src": "311:1588:5"
      }
    ],
    "src": "0:1900:5"
  },
  "legacyAST": {
    "absolutePath": "/src/contracts/Disputer.sol",
    "exportedSymbols": {
      "Disputer": [
        1913
      ]
    },
    "id": 1914,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1856,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "/src/contracts/BaseDisputer.sol",
        "file": "./BaseDisputer.sol",
        "id": 1857,
        "nodeType": "ImportDirective",
        "scope": 1914,
        "sourceUnit": 985,
        "src": "26:28:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/src/contracts/IDisputer.sol",
        "file": "./IDisputer.sol",
        "id": 1858,
        "nodeType": "ImportDirective",
        "scope": 1914,
        "sourceUnit": 2191,
        "src": "55:25:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1859,
              "name": "BaseDisputer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 984,
              "src": "332:12:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseDisputer_$984",
                "typeString": "contract BaseDisputer"
              }
            },
            "id": 1860,
            "nodeType": "InheritanceSpecifier",
            "src": "332:12:5"
          }
        ],
        "contractDependencies": [
          984,
          2190
        ],
        "contractKind": "contract",
        "documentation": "Only the code that really interacts with Augur should be place here,\nthe rest goes into BaseDisputer for better testability.\n * Gotta be careful around scenario of Augur forking while disputer still holds funds.",
        "fullyImplemented": true,
        "id": 1913,
        "linearizedBaseContracts": [
          1913,
          984,
          2190
        ],
        "name": "Disputer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1882,
              "nodeType": "Block",
              "src": "486:74:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1875,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1862,
                        "src": "501:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1876,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1864,
                        "src": "508:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1877,
                        "name": "feeWindowId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1866,
                        "src": "516:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1878,
                        "name": "payoutNumerators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1869,
                        "src": "529:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1879,
                        "name": "invalid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1871,
                        "src": "547:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1874,
                      "name": "baseInit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 827,
                      "src": "492:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256[] memory,bool)"
                      }
                    },
                    "id": 1880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "492:63:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1881,
                  "nodeType": "ExpressionStatement",
                  "src": "492:63:5"
                }
              ]
            },
            "documentation": null,
            "id": 1883,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1862,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1883,
                  "src": "366:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "366:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1864,
                  "name": "market",
                  "nodeType": "VariableDeclaration",
                  "scope": 1883,
                  "src": "385:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "385:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1866,
                  "name": "feeWindowId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1883,
                  "src": "405:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1869,
                  "name": "payoutNumerators",
                  "nodeType": "VariableDeclaration",
                  "scope": 1883,
                  "src": "430:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1867,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "430:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1868,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "430:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1871,
                  "name": "invalid",
                  "nodeType": "VariableDeclaration",
                  "scope": 1883,
                  "src": "462:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1870,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "462:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "360:118:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1873,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "486:0:5"
            },
            "scope": 1913,
            "src": "349:211:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1891,
              "nodeType": "Block",
              "src": "843:792:5",
              "statements": []
            },
            "documentation": "This function should use as little gas as possible, as it will be called\nduring rush time. Unnecessary operations are postponed for later.\n   * Can only be called once.",
            "id": 1892,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1888,
                    "name": "feeReceiver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1885,
                    "src": "830:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1889,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1887,
                  "name": "withDisputeBoilerplate",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 902,
                  "src": "807:22:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "807:35:5"
              }
            ],
            "name": "dispute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1885,
                  "name": "feeReceiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 1892,
                  "src": "777:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1884,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "777:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "776:21:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "843:0:5"
            },
            "scope": 1913,
            "src": "760:875:5",
            "stateMutability": "nonpayable",
            "superFunction": 2166,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1901,
              "nodeType": "Block",
              "src": "1692:66:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 1898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1705:5:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1897,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3408,
                      "src": "1698:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1698:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1900,
                  "nodeType": "ExpressionStatement",
                  "src": "1698:13:5"
                }
              ]
            },
            "documentation": null,
            "id": 1902,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getREPImpl",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1658:2:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1895,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1902,
                  "src": "1684:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3404",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1894,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3404,
                    "src": "1684:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3404",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1683:8:5"
            },
            "scope": 1913,
            "src": "1639:119:5",
            "stateMutability": "view",
            "superFunction": 978,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1911,
              "nodeType": "Block",
              "src": "1831:66:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 1908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1844:5:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1907,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3408,
                      "src": "1837:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1837:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1910,
                  "nodeType": "ExpressionStatement",
                  "src": "1837:13:5"
                }
              ]
            },
            "documentation": null,
            "id": 1912,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getDisputeTokenAddressImpl",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1903,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1797:2:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1905,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1912,
                  "src": "1823:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3404",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1904,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3404,
                    "src": "1823:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3404",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1822:8:5"
            },
            "scope": 1913,
            "src": "1762:135:5",
            "stateMutability": "view",
            "superFunction": 983,
            "visibility": "internal"
          }
        ],
        "scope": 1914,
        "src": "311:1588:5"
      }
    ],
    "src": "0:1900:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-11-01T01:10:26.492Z"
}