{
  "contractName": "MockDisputer",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "m_rep_mock",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "m_params",
      "outputs": [
        {
          "name": "market",
          "type": "address"
        },
        {
          "name": "feeWindowId",
          "type": "uint256"
        },
        {
          "name": "invalid",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "m_disputeToken_mock",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDisputeTokenAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "m_feeReceiver",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getREP",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "feeReceiver",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "approveManagerToSpendDisputeTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "hasDisputed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "m_owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "rep",
          "type": "address"
        },
        {
          "name": "amountOfREPToDisputeWith",
          "type": "uint256"
        },
        {
          "name": "market",
          "type": "address"
        },
        {
          "name": "feeWindowId",
          "type": "uint256"
        },
        {
          "name": "payoutNumerators",
          "type": "uint256[]"
        },
        {
          "name": "invalid",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "feeReceiver",
          "type": "address"
        }
      ],
      "name": "dispute",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200005357600080fd5b5060405162002f6838038062002f688339810180604052810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805182019291906020018051906020019092919050505085600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600a819055506200011d87858585856200012a640100000000026401000000009004565b50505050505050620004cb565b846000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080604051908101604052808573ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001821515815250600260008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190805190602001906200021592919062000451565b5060608201518160030160006101000a81548160ff0219169083151502179055509050506200025262000427640100000000026401000000009004565b600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b36000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156200039957600080fd5b505af1158015620003ae573d6000803e3d6000fd5b505050506040513d6020811015620003c557600080fd5b81019080805190602001909291905050501515620003df57fe5b30600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b82805482825590600052602060002090810192821562000490579160200282015b828111156200048f57825182559160200191906001019062000472565b5b5090506200049f9190620004a3565b5090565b620004c891905b80821115620004c4576000816000905550600101620004aa565b5090565b90565b612a8d80620004db6000396000f3006080604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306f22490146100bf57806315298c77146101165780632c68e1881461017f5780632e602752146101d657806355af7a831461022d5780636f2c83ee14610284578063893d20e8146102db578063b3f0067414610332578063cadbbf6314610389578063d18959a2146103a0578063deff41c1146103cf578063f75f9f7b14610426575b600080fd5b3480156100cb57600080fd5b506100d4610469565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012257600080fd5b5061012b61048f565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001935050505060405180910390f35b34801561018b57600080fd5b506101946104d4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101e257600080fd5b506101eb6104fa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561023957600080fd5b50610242610581565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561029057600080fd5b506102996105a7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e757600080fd5b506102f06105d1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561033e57600080fd5b506103476105fa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561039557600080fd5b5061039e61066b565b005b3480156103ac57600080fd5b506103b56107a4565b604051808215151515815260200191505060405180910390f35b3480156103db57600080fd5b506103e46107e7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561043257600080fd5b50610467600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061080c565b005b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60028060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060030160009054906101000a900460ff16905083565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561055957600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561064357600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006106756104fa565b90508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b36000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561075b57600080fd5b505af115801561076f573d6000803e3d6000fd5b505050506040513d602081101561078557600080fd5b810190808051906020019092919050505015156107a157600080fd5b50565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600083600080600080600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156108c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f43616e206f6e6c792064697370757465206f6e6365000000000000000000000081525060200191505060405180910390fd5b60008673ffffffffffffffffffffffffffffffffffffffff1614151515610958576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4d75737420686176652076616c6964206665652072656365697665720000000081525060200191505060405180910390fd5b85600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109a16105a7565b94508473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610a3e57600080fd5b505af1158015610a52573d6000803e3d6000fd5b505050506040513d6020811015610a6857600080fd5b81019080805190602001909291905050509350600a549850600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610b3d57600080fd5b505af1158015610b51573d6000803e3d6000fd5b505050506040513d6020811015610b6757600080fd5b81019080805190602001909291905050509750878911610b875788610b89565b875b96506000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610bcf57fe5b610bd7611077565b604051809103906000f080158015610bf3573d6000803e3d6000fd5b50600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68886040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b158015610cc557600080fd5b505af1158015610cd9573d6000803e3d6000fd5b50505050620c5490600a54141515610df457600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f19308b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610db057600080fd5b505af1158015610dc4573d6000803e3d6000fd5b505050506040513d6020811015610dda57600080fd5b81019080805190602001909291905050501515610df357fe5b5b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610e8f57600080fd5b505af1158015610ea3573d6000803e3d6000fd5b505050506040513d6020811015610eb957600080fd5b81019080805190602001909291905050509250610ed4611009565b915081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610fb257600080fd5b505af1158015610fc6573d6000803e3d6000fd5b505050506040513d6020811015610fdc57600080fd5b810190808051906020019092919050505090508381840110151515610ffd57fe5b50505050505050505050565b600080600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561104f57fe5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6040516119da8061108883390190560060806040526200001e3362000024640100000000026401000000009004565b620001e6565b620000488160036200008e6401000000000262001659179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515620000cb57600080fd5b620000e6828262000151640100000000026401000000009004565b151515620000f357600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156200018f57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6117e480620001f66000396000f3006080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b3146100d557806318160ddd1461013a57806323b872dd1461016557806339509351146101ea57806340c10f191461024f57806342966c68146102b457806370a08231146102e157806379cc679014610338578063983b2d561461038557806398650275146103c8578063a457c2d7146103df578063a9059cbb14610444578063aa271e1a146104a9578063dd62ed3e14610504575b600080fd5b3480156100e157600080fd5b50610120600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061057b565b604051808215151515815260200191505060405180910390f35b34801561014657600080fd5b5061014f6106a8565b6040518082815260200191505060405180910390f35b34801561017157600080fd5b506101d0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106b2565b604051808215151515815260200191505060405180910390f35b3480156101f657600080fd5b50610235600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610864565b604051808215151515815260200191505060405180910390f35b34801561025b57600080fd5b5061029a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a9b565b604051808215151515815260200191505060405180910390f35b3480156102c057600080fd5b506102df60048036038101908080359060200190929190505050610ac5565b005b3480156102ed57600080fd5b50610322600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ad2565b6040518082815260200191505060405180910390f35b34801561034457600080fd5b50610383600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b1a565b005b34801561039157600080fd5b506103c6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b28565b005b3480156103d457600080fd5b506103dd610b48565b005b3480156103eb57600080fd5b5061042a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b53565b604051808215151515815260200191505060405180910390f35b34801561045057600080fd5b5061048f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d8a565b604051808215151515815260200191505060405180910390f35b3480156104b557600080fd5b506104ea600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610da1565b604051808215151515815260200191505060405180910390f35b34801561051057600080fd5b50610565600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dbe565b6040518082815260200191505060405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156105b857600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600254905090565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561073f57600080fd5b6107ce82600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610859848484610e66565b600190509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156108a157600080fd5b61093082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461107f90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000610aa633610da1565b1515610ab157600080fd5b610abb83836110a0565b6001905092915050565b610acf33826111de565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610b248282611369565b5050565b610b3133610da1565b1515610b3c57600080fd5b610b4581611511565b50565b610b513361156b565b565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610b9057600080fd5b610c1f82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000610d97338484610e66565b6001905092915050565b6000610db78260036115c590919063ffffffff16565b9050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080838311151515610e5757600080fd5b82840390508091505092915050565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151515610eb357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610eef57600080fd5b610f40816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610fd3816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461107f90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080828401905083811015151561109657600080fd5b8091505092915050565b60008273ffffffffffffffffffffffffffffffffffffffff16141515156110c657600080fd5b6110db8160025461107f90919063ffffffff16565b600281905550611132816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461107f90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008273ffffffffffffffffffffffffffffffffffffffff161415151561120457600080fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115151561125157600080fd5b61126681600254610e4590919063ffffffff16565b6002819055506112bd816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481111515156113f457600080fd5b61148381600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061150d82826111de565b5050565b61152581600361165990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b61157f81600361170990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561160257600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561169557600080fd5b61169f82826115c5565b1515156116ab57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561174557600080fd5b61174f82826115c5565b151561175a57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505600a165627a7a723058201570821f05bf0cbf8c63db9c538a204516db78687c2b8692cf0da89621983e480029a165627a7a7230582050d4e0c3f0261d5ef83b5326edd049751b4c9035622235f027cc25f220f9091e0029",
  "deployedBytecode": "0x6080604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306f22490146100bf57806315298c77146101165780632c68e1881461017f5780632e602752146101d657806355af7a831461022d5780636f2c83ee14610284578063893d20e8146102db578063b3f0067414610332578063cadbbf6314610389578063d18959a2146103a0578063deff41c1146103cf578063f75f9f7b14610426575b600080fd5b3480156100cb57600080fd5b506100d4610469565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012257600080fd5b5061012b61048f565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001935050505060405180910390f35b34801561018b57600080fd5b506101946104d4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101e257600080fd5b506101eb6104fa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561023957600080fd5b50610242610581565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561029057600080fd5b506102996105a7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e757600080fd5b506102f06105d1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561033e57600080fd5b506103476105fa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561039557600080fd5b5061039e61066b565b005b3480156103ac57600080fd5b506103b56107a4565b604051808215151515815260200191505060405180910390f35b3480156103db57600080fd5b506103e46107e7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561043257600080fd5b50610467600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061080c565b005b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60028060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060030160009054906101000a900460ff16905083565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561055957600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561064357600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006106756104fa565b90508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b36000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561075b57600080fd5b505af115801561076f573d6000803e3d6000fd5b505050506040513d602081101561078557600080fd5b810190808051906020019092919050505015156107a157600080fd5b50565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600083600080600080600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156108c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f43616e206f6e6c792064697370757465206f6e6365000000000000000000000081525060200191505060405180910390fd5b60008673ffffffffffffffffffffffffffffffffffffffff1614151515610958576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4d75737420686176652076616c6964206665652072656365697665720000000081525060200191505060405180910390fd5b85600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109a16105a7565b94508473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610a3e57600080fd5b505af1158015610a52573d6000803e3d6000fd5b505050506040513d6020811015610a6857600080fd5b81019080805190602001909291905050509350600a549850600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610b3d57600080fd5b505af1158015610b51573d6000803e3d6000fd5b505050506040513d6020811015610b6757600080fd5b81019080805190602001909291905050509750878911610b875788610b89565b875b96506000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610bcf57fe5b610bd7611077565b604051809103906000f080158015610bf3573d6000803e3d6000fd5b50600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68886040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b158015610cc557600080fd5b505af1158015610cd9573d6000803e3d6000fd5b50505050620c5490600a54141515610df457600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f19308b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610db057600080fd5b505af1158015610dc4573d6000803e3d6000fd5b505050506040513d6020811015610dda57600080fd5b81019080805190602001909291905050501515610df357fe5b5b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610e8f57600080fd5b505af1158015610ea3573d6000803e3d6000fd5b505050506040513d6020811015610eb957600080fd5b81019080805190602001909291905050509250610ed4611009565b915081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610fb257600080fd5b505af1158015610fc6573d6000803e3d6000fd5b505050506040513d6020811015610fdc57600080fd5b810190808051906020019092919050505090508381840110151515610ffd57fe5b50505050505050505050565b600080600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561104f57fe5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6040516119da8061108883390190560060806040526200001e3362000024640100000000026401000000009004565b620001e6565b620000488160036200008e6401000000000262001659179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515620000cb57600080fd5b620000e6828262000151640100000000026401000000009004565b151515620000f357600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156200018f57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6117e480620001f66000396000f3006080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b3146100d557806318160ddd1461013a57806323b872dd1461016557806339509351146101ea57806340c10f191461024f57806342966c68146102b457806370a08231146102e157806379cc679014610338578063983b2d561461038557806398650275146103c8578063a457c2d7146103df578063a9059cbb14610444578063aa271e1a146104a9578063dd62ed3e14610504575b600080fd5b3480156100e157600080fd5b50610120600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061057b565b604051808215151515815260200191505060405180910390f35b34801561014657600080fd5b5061014f6106a8565b6040518082815260200191505060405180910390f35b34801561017157600080fd5b506101d0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106b2565b604051808215151515815260200191505060405180910390f35b3480156101f657600080fd5b50610235600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610864565b604051808215151515815260200191505060405180910390f35b34801561025b57600080fd5b5061029a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a9b565b604051808215151515815260200191505060405180910390f35b3480156102c057600080fd5b506102df60048036038101908080359060200190929190505050610ac5565b005b3480156102ed57600080fd5b50610322600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ad2565b6040518082815260200191505060405180910390f35b34801561034457600080fd5b50610383600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b1a565b005b34801561039157600080fd5b506103c6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b28565b005b3480156103d457600080fd5b506103dd610b48565b005b3480156103eb57600080fd5b5061042a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b53565b604051808215151515815260200191505060405180910390f35b34801561045057600080fd5b5061048f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d8a565b604051808215151515815260200191505060405180910390f35b3480156104b557600080fd5b506104ea600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610da1565b604051808215151515815260200191505060405180910390f35b34801561051057600080fd5b50610565600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dbe565b6040518082815260200191505060405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156105b857600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600254905090565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561073f57600080fd5b6107ce82600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610859848484610e66565b600190509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156108a157600080fd5b61093082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461107f90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000610aa633610da1565b1515610ab157600080fd5b610abb83836110a0565b6001905092915050565b610acf33826111de565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610b248282611369565b5050565b610b3133610da1565b1515610b3c57600080fd5b610b4581611511565b50565b610b513361156b565b565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610b9057600080fd5b610c1f82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000610d97338484610e66565b6001905092915050565b6000610db78260036115c590919063ffffffff16565b9050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080838311151515610e5757600080fd5b82840390508091505092915050565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151515610eb357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610eef57600080fd5b610f40816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610fd3816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461107f90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080828401905083811015151561109657600080fd5b8091505092915050565b60008273ffffffffffffffffffffffffffffffffffffffff16141515156110c657600080fd5b6110db8160025461107f90919063ffffffff16565b600281905550611132816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461107f90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008273ffffffffffffffffffffffffffffffffffffffff161415151561120457600080fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115151561125157600080fd5b61126681600254610e4590919063ffffffff16565b6002819055506112bd816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481111515156113f457600080fd5b61148381600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061150d82826111de565b5050565b61152581600361165990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b61157f81600361170990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561160257600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561169557600080fd5b61169f82826115c5565b1515156116ab57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561174557600080fd5b61174f82826115c5565b151561175a57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505600a165627a7a723058201570821f05bf0cbf8c63db9c538a204516db78687c2b8692cf0da89621983e480029a165627a7a7230582050d4e0c3f0261d5ef83b5326edd049751b4c9035622235f027cc25f220f9091e0029",
  "sourceMap": "283:1366:15:-;;;277:1:2;246:32;;;;;;;;;;;;;;;;;;;;435:350:15;8:9:-1;5:2;;;30:1;27;20:12;5:2;435:350:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;648:3;635:10;;:16;;;;;;;;;;;;;;;;;;686:24;657:26;:53;;;;717:63;726:5;733:6;741:11;754:16;772:7;717:8;;;:63;;;:::i;:::-;435:350;;;;;;;283:1366;;472:616:2;633:5;623:7;;:15;;;;;;;;;;;;;;;;;;655:99;;;;;;;;;684:6;655:99;;;;;;698:11;655:99;;;;717:16;655:99;;;;741:7;655:99;;;;;644:8;:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;872:12;:10;;;:12;;;:::i;:::-;864:5;;:20;;;;;;;;;;;;;;;;;;897:5;;;;;;;;;;;:13;;;911:7;;;;;;;;;;;920:10;897:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;897:34:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;897:34:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;897:34:2;;;;;;;;;;;;;;;;890:42;;;;;;1077:4;1045:14;;:38;;;;;;;;;;;;;;;;;;472:616;;;;;:::o;1409:81:15:-;1454:6;1475:10;;;;;;;;;;;1468:17;;1409:81;:::o;283:1366::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "283:1366:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;325:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;325:27:15;;;;;;;;;;;;;;;;;;;;;;;;;;;282:37:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;282:37:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;356:36:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;356:36:15;;;;;;;;;;;;;;;;;;;;;;;;;;;2480:149:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2480:149:2;;;;;;;;;;;;;;;;;;;;;;;;;;;246:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;246:32:2;;;;;;;;;;;;;;;;;;;;;;;;;;;2406:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2406:70:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1092:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1092:77:2;;;;;;;;;;;;;;;;;;;;;;;;;;;2028:119;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2028:119:2;;;;;;;;;;;;;;;;;;;;;;;;;;;2220:182;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2220:182:2;;;;;;1936:88;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1936:88:2;;;;;;;;;;;;;;;;;;;;;;;;;;;220:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;220:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;789:616:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;789:616:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;325:27;;;;;;;;;;;;;:::o;282:37:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;356:36:15:-;;;;;;;;;;;;;:::o;2480:149:2:-;2535:6;2590:4;2557:39;;:14;;;;;;;;;;;:39;;;;2549:48;;;;;;;;2610:14;;;;;;;;;;;2603:21;;2480:149;:::o;246:32::-;;;;;;;;;;;;;:::o;2406:70::-;2445:6;2466:5;;;;;;;;;;;2459:12;;2406:70;:::o;1092:77::-;1135:7;1157;;;;;;;;;;;1150:14;;1092:77;:::o;2028:119::-;2074:7;2114:1;2097:13;;;;;;;;;;;:18;;;;2089:27;;;;;;;;2129:13;;;;;;;;;;;2122:20;;2028:119;:::o;2220:182::-;2281:26;2310:24;:22;:24::i;:::-;2281:53;;2348:19;:27;;;2376:7;;;;;;;;;;;2385:10;2348:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2348:48:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2348:48:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2348:48:2;;;;;;;;;;;;;;;;2340:57;;;;;;;;2220:182;:::o;1936:88::-;1982:4;2018:1;2001:13;;;;;;;;;;;:18;;;;1994:25;;1936:88;:::o;220:22::-;;;;;;;;;;;;;:::o;789:616:15:-;878:22;935:15;985:23;859:11;1486:10:2;1513:25;1573:23;1696:19;1787:32;1356:1;1339:13;;;;;;;;;;;:18;;;1331:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1412:1;1397:11;:16;;;;1389:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1468:11;1452:13;;:27;;;;;;;;;;;;;;;;;;1499:8;:6;:8::i;:::-;1486:21;;1541:3;:13;;;1555:4;1541:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1541:19:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1541:19:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1541:19:2;;;;;;;;;;;;;;;;1513:47;;903:26:15;;878:51;;953:10;;;;;;;;;;;:20;;;974:4;953:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;953:26:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;953:26:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;953:26:15;;;;;;;;;;;;;;;;935:44;;1028:7;1011:14;:24;:51;;1048:14;1011:51;;;1038:7;1011:51;985:77;;1132:1;1108:19;;;;;;;;;;;1100:33;;;1093:41;;;;;;1162:15;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1162:15:15;1140:19;;:37;;;;;;;;;;;;;;;;;;1183:10;;;;;;;;;;;:15;;;1199;1183:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1183:32:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1183:32:15;;;;1324:6;1294:26;;:36;;1290:111;;;1347:19;;;;;;;;;;;:24;;;1372:4;1378:14;1347:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:46:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1347:46:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1347:46:15;;;;;;;;;;;;;;;;1340:54;;;;;;1290:111;1599:3:2;:13;;;1613:4;1599:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1599:19:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1599:19:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1599:19:2;;;;;;;;;;;;;;;;1573:45;;1718:28;:26;:28::i;:::-;1696:50;;1769:12;1752:14;;:29;;;;;;;;;;;;;;;;;;1822:12;:22;;;1845:4;1822:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1822:28:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1822:28:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1822:28:2;;;;;;;;;;;;;;;;1787:63;;1909:17;1881:24;1863:15;:42;:63;;1856:71;;;;;;789:616:15;;;;;;;;;;:::o;1494:153::-;1555:6;1608:1;1584:19;;;;;;;;;;;1576:33;;;;1569:41;;;;;;1623:19;;;;;;;;;;;1616:26;;1494:153;:::o;283:1366::-;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"../BaseDisputer.sol\";\nimport \"../IDisputer.sol\";\nimport \"./MockERC20.sol\";\n\n/**\n * Version of disputer that doesn't really interact with Augur and instead\n * pretends to have disputed, by minting/burning tokens.\n *\n * Used to test crowdsourcer.\n */\ncontract MockDisputer is BaseDisputer {\n  MockERC20 public m_rep_mock;\n  MockERC20 public m_disputeToken_mock;\n  uint256 m_amountOfREPToDisputeWith;\n\n  constructor(\n    address owner,\n    MockERC20 rep,\n    uint256 amountOfREPToDisputeWith,\n    address market,\n    uint256 feeWindowId,\n    uint256[] payoutNumerators,\n    bool invalid\n  ) public {\n    m_rep_mock = rep;\n    m_amountOfREPToDisputeWith = amountOfREPToDisputeWith;\n\n    baseInit(owner, market, feeWindowId, payoutNumerators, invalid);\n  }\n\n  function dispute(address feeReceiver) external withDisputeBoilerplate(feeReceiver) {\n    uint256 amountToCreate = m_amountOfREPToDisputeWith;\n    uint256 balance = m_rep_mock.balanceOf(this);\n    uint256 amountToDestroy = amountToCreate > balance ? balance : amountToCreate;\n\n    // simulate dispute\n    assert(address(m_disputeToken_mock) == 0);\n    m_disputeToken_mock = new MockERC20();\n    m_rep_mock.burn(amountToDestroy);\n\n    // 808080 is special value used in tests to simulate funds loss\n    if (m_amountOfREPToDisputeWith != 808080) {\n      assert(m_disputeToken_mock.mint(this, amountToCreate));\n    }\n  }\n\n  function getREPImpl() internal view returns (IERC20) {\n    return m_rep_mock;\n  }\n\n  function getDisputeTokenAddressImpl() internal view returns (IERC20) {\n    assert(address(m_disputeToken_mock) != 0);\n    return m_disputeToken_mock;\n  }\n}\n",
  "sourcePath": "/src/contracts/mocks/MockDisputer.sol",
  "ast": {
    "absolutePath": "/src/contracts/mocks/MockDisputer.sol",
    "exportedSymbols": {
      "MockDisputer": [
        2703
      ]
    },
    "id": 2704,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2570,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:15"
      },
      {
        "absolutePath": "/src/contracts/BaseDisputer.sol",
        "file": "../BaseDisputer.sol",
        "id": 2571,
        "nodeType": "ImportDirective",
        "scope": 2704,
        "sourceUnit": 1307,
        "src": "26:29:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/src/contracts/IDisputer.sol",
        "file": "../IDisputer.sol",
        "id": 2572,
        "nodeType": "ImportDirective",
        "scope": 2704,
        "sourceUnit": 2513,
        "src": "56:26:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/src/contracts/mocks/MockERC20.sol",
        "file": "./MockERC20.sol",
        "id": 2573,
        "nodeType": "ImportDirective",
        "scope": 2704,
        "sourceUnit": 2830,
        "src": "83:25:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2574,
              "name": "BaseDisputer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1306,
              "src": "308:12:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseDisputer_$1306",
                "typeString": "contract BaseDisputer"
              }
            },
            "id": 2575,
            "nodeType": "InheritanceSpecifier",
            "src": "308:12:15"
          }
        ],
        "contractDependencies": [
          1306,
          2512,
          2829
        ],
        "contractKind": "contract",
        "documentation": "Version of disputer that doesn't really interact with Augur and instead\npretends to have disputed, by minting/burning tokens.\n * Used to test crowdsourcer.",
        "fullyImplemented": true,
        "id": 2703,
        "linearizedBaseContracts": [
          2703,
          1306,
          2512
        ],
        "name": "MockDisputer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2577,
            "name": "m_rep_mock",
            "nodeType": "VariableDeclaration",
            "scope": 2703,
            "src": "325:27:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$2829",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 2576,
              "name": "MockERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2829,
              "src": "325:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$2829",
                "typeString": "contract MockERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2579,
            "name": "m_disputeToken_mock",
            "nodeType": "VariableDeclaration",
            "scope": 2703,
            "src": "356:36:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$2829",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 2578,
              "name": "MockERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2829,
              "src": "356:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$2829",
                "typeString": "contract MockERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2581,
            "name": "m_amountOfREPToDisputeWith",
            "nodeType": "VariableDeclaration",
            "scope": 2703,
            "src": "396:34:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2580,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "396:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2615,
              "nodeType": "Block",
              "src": "629:156:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2599,
                      "name": "m_rep_mock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2577,
                      "src": "635:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$2829",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2600,
                      "name": "rep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2585,
                      "src": "648:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$2829",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "635:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$2829",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 2602,
                  "nodeType": "ExpressionStatement",
                  "src": "635:16:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2603,
                      "name": "m_amountOfREPToDisputeWith",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2581,
                      "src": "657:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2604,
                      "name": "amountOfREPToDisputeWith",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2587,
                      "src": "686:24:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "657:53:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2606,
                  "nodeType": "ExpressionStatement",
                  "src": "657:53:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2608,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2583,
                        "src": "726:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2609,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2589,
                        "src": "733:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2610,
                        "name": "feeWindowId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2591,
                        "src": "741:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2611,
                        "name": "payoutNumerators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2594,
                        "src": "754:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2612,
                        "name": "invalid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2596,
                        "src": "772:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2607,
                      "name": "baseInit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1149,
                      "src": "717:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256[] memory,bool)"
                      }
                    },
                    "id": 2613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "717:63:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2614,
                  "nodeType": "ExpressionStatement",
                  "src": "717:63:15"
                }
              ]
            },
            "documentation": null,
            "id": 2616,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2583,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2616,
                  "src": "452:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2582,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "452:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2585,
                  "name": "rep",
                  "nodeType": "VariableDeclaration",
                  "scope": 2616,
                  "src": "471:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MockERC20_$2829",
                    "typeString": "contract MockERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2584,
                    "name": "MockERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2829,
                    "src": "471:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$2829",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2587,
                  "name": "amountOfREPToDisputeWith",
                  "nodeType": "VariableDeclaration",
                  "scope": 2616,
                  "src": "490:32:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2586,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "490:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2589,
                  "name": "market",
                  "nodeType": "VariableDeclaration",
                  "scope": 2616,
                  "src": "528:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2588,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2591,
                  "name": "feeWindowId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2616,
                  "src": "548:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2594,
                  "name": "payoutNumerators",
                  "nodeType": "VariableDeclaration",
                  "scope": 2616,
                  "src": "573:26:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2592,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "573:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2593,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "573:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2596,
                  "name": "invalid",
                  "nodeType": "VariableDeclaration",
                  "scope": 2616,
                  "src": "605:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2595,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "605:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "446:175:15"
            },
            "payable": false,
            "returnParameters": {
              "id": 2598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "629:0:15"
            },
            "scope": 2703,
            "src": "435:350:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2677,
              "nodeType": "Block",
              "src": "872:533:15",
              "statements": [
                {
                  "assignments": [
                    2625
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2625,
                      "name": "amountToCreate",
                      "nodeType": "VariableDeclaration",
                      "scope": 2678,
                      "src": "878:22:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2624,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "878:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2627,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2626,
                    "name": "m_amountOfREPToDisputeWith",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2581,
                    "src": "903:26:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "878:51:15"
                },
                {
                  "assignments": [
                    2629
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2629,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2678,
                      "src": "935:15:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2628,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "935:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2634,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2632,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3800,
                        "src": "974:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockDisputer_$2703",
                          "typeString": "contract MockDisputer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockDisputer_$2703",
                          "typeString": "contract MockDisputer"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2630,
                        "name": "m_rep_mock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2577,
                        "src": "953:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$2829",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 2631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3195,
                      "src": "953:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "953:26:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "935:44:15"
                },
                {
                  "assignments": [
                    2636
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2636,
                      "name": "amountToDestroy",
                      "nodeType": "VariableDeclaration",
                      "scope": 2678,
                      "src": "985:23:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2635,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "985:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2643,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2637,
                        "name": "amountToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2625,
                        "src": "1011:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2638,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2629,
                        "src": "1028:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1011:24:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "id": 2641,
                      "name": "amountToCreate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2625,
                      "src": "1048:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1011:51:15",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 2640,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2629,
                      "src": "1038:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "985:77:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2646,
                              "name": "m_disputeToken_mock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2579,
                              "src": "1108:19:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$2829",
                                "typeString": "contract MockERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockERC20_$2829",
                                "typeString": "contract MockERC20"
                              }
                            ],
                            "id": 2645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1100:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1100:28:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1132:1:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1100:33:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2644,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3730,
                      "src": "1093:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1093:41:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2651,
                  "nodeType": "ExpressionStatement",
                  "src": "1093:41:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2652,
                      "name": "m_disputeToken_mock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2579,
                      "src": "1140:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$2829",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1162:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockERC20_$2829_$",
                          "typeString": "function () returns (contract MockERC20)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 2653,
                          "name": "MockERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2829,
                          "src": "1166:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$2829",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 2655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1162:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$2829",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "1140:37:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$2829",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 2657,
                  "nodeType": "ExpressionStatement",
                  "src": "1140:37:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2661,
                        "name": "amountToDestroy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2636,
                        "src": "1199:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2658,
                        "name": "m_rep_mock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2577,
                        "src": "1183:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$2829",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 2660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3615,
                      "src": "1183:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1183:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2663,
                  "nodeType": "ExpressionStatement",
                  "src": "1183:32:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2664,
                      "name": "m_amountOfREPToDisputeWith",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2581,
                      "src": "1294:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "383038303830",
                      "id": 2665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1324:6:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_808080_by_1",
                        "typeString": "int_const 808080"
                      },
                      "value": "808080"
                    },
                    "src": "1294:36:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2676,
                  "nodeType": "IfStatement",
                  "src": "1290:111:15",
                  "trueBody": {
                    "id": 2675,
                    "nodeType": "Block",
                    "src": "1332:69:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2670,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3800,
                                  "src": "1372:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockDisputer_$2703",
                                    "typeString": "contract MockDisputer"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 2671,
                                  "name": "amountToCreate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2625,
                                  "src": "1378:14:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockDisputer_$2703",
                                    "typeString": "contract MockDisputer"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2668,
                                  "name": "m_disputeToken_mock",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2579,
                                  "src": "1347:19:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockERC20_$2829",
                                    "typeString": "contract MockERC20"
                                  }
                                },
                                "id": 2669,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mint",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3656,
                                "src": "1347:24:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 2672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1347:46:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2667,
                            "name": "assert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3730,
                            "src": "1340:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 2673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1340:54:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2674,
                        "nodeType": "ExpressionStatement",
                        "src": "1340:54:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 2678,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2621,
                    "name": "feeReceiver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2618,
                    "src": "859:11:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2622,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2620,
                  "name": "withDisputeBoilerplate",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1224,
                  "src": "836:22:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "836:35:15"
              }
            ],
            "name": "dispute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2618,
                  "name": "feeReceiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 2678,
                  "src": "806:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2617,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "806:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "805:21:15"
            },
            "payable": false,
            "returnParameters": {
              "id": 2623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "872:0:15"
            },
            "scope": 2703,
            "src": "789:616:15",
            "stateMutability": "nonpayable",
            "superFunction": 2488,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2685,
              "nodeType": "Block",
              "src": "1462:28:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2683,
                    "name": "m_rep_mock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2577,
                    "src": "1475:10:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$2829",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "functionReturnParameters": 2682,
                  "id": 2684,
                  "nodeType": "Return",
                  "src": "1468:17:15"
                }
              ]
            },
            "documentation": null,
            "id": 2686,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getREPImpl",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1428:2:15"
            },
            "payable": false,
            "returnParameters": {
              "id": 2682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2681,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2686,
                  "src": "1454:6:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3726",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2680,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3726,
                    "src": "1454:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3726",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1453:8:15"
            },
            "scope": 2703,
            "src": "1409:81:15",
            "stateMutability": "view",
            "superFunction": 1300,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2701,
              "nodeType": "Block",
              "src": "1563:84:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2693,
                              "name": "m_disputeToken_mock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2579,
                              "src": "1584:19:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$2829",
                                "typeString": "contract MockERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockERC20_$2829",
                                "typeString": "contract MockERC20"
                              }
                            ],
                            "id": 2692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1576:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1576:28:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1608:1:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1576:33:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2691,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3730,
                      "src": "1569:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1569:41:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2698,
                  "nodeType": "ExpressionStatement",
                  "src": "1569:41:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2699,
                    "name": "m_disputeToken_mock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2579,
                    "src": "1623:19:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$2829",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "functionReturnParameters": 2690,
                  "id": 2700,
                  "nodeType": "Return",
                  "src": "1616:26:15"
                }
              ]
            },
            "documentation": null,
            "id": 2702,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getDisputeTokenAddressImpl",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2687,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1529:2:15"
            },
            "payable": false,
            "returnParameters": {
              "id": 2690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2689,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2702,
                  "src": "1555:6:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3726",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2688,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3726,
                    "src": "1555:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3726",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1554:8:15"
            },
            "scope": 2703,
            "src": "1494:153:15",
            "stateMutability": "view",
            "superFunction": 1305,
            "visibility": "internal"
          }
        ],
        "scope": 2704,
        "src": "283:1366:15"
      }
    ],
    "src": "0:1650:15"
  },
  "legacyAST": {
    "absolutePath": "/src/contracts/mocks/MockDisputer.sol",
    "exportedSymbols": {
      "MockDisputer": [
        2703
      ]
    },
    "id": 2704,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2570,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:15"
      },
      {
        "absolutePath": "/src/contracts/BaseDisputer.sol",
        "file": "../BaseDisputer.sol",
        "id": 2571,
        "nodeType": "ImportDirective",
        "scope": 2704,
        "sourceUnit": 1307,
        "src": "26:29:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/src/contracts/IDisputer.sol",
        "file": "../IDisputer.sol",
        "id": 2572,
        "nodeType": "ImportDirective",
        "scope": 2704,
        "sourceUnit": 2513,
        "src": "56:26:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/src/contracts/mocks/MockERC20.sol",
        "file": "./MockERC20.sol",
        "id": 2573,
        "nodeType": "ImportDirective",
        "scope": 2704,
        "sourceUnit": 2830,
        "src": "83:25:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2574,
              "name": "BaseDisputer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1306,
              "src": "308:12:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseDisputer_$1306",
                "typeString": "contract BaseDisputer"
              }
            },
            "id": 2575,
            "nodeType": "InheritanceSpecifier",
            "src": "308:12:15"
          }
        ],
        "contractDependencies": [
          1306,
          2512,
          2829
        ],
        "contractKind": "contract",
        "documentation": "Version of disputer that doesn't really interact with Augur and instead\npretends to have disputed, by minting/burning tokens.\n * Used to test crowdsourcer.",
        "fullyImplemented": true,
        "id": 2703,
        "linearizedBaseContracts": [
          2703,
          1306,
          2512
        ],
        "name": "MockDisputer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2577,
            "name": "m_rep_mock",
            "nodeType": "VariableDeclaration",
            "scope": 2703,
            "src": "325:27:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$2829",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 2576,
              "name": "MockERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2829,
              "src": "325:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$2829",
                "typeString": "contract MockERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2579,
            "name": "m_disputeToken_mock",
            "nodeType": "VariableDeclaration",
            "scope": 2703,
            "src": "356:36:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$2829",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 2578,
              "name": "MockERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2829,
              "src": "356:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$2829",
                "typeString": "contract MockERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2581,
            "name": "m_amountOfREPToDisputeWith",
            "nodeType": "VariableDeclaration",
            "scope": 2703,
            "src": "396:34:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2580,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "396:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2615,
              "nodeType": "Block",
              "src": "629:156:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2599,
                      "name": "m_rep_mock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2577,
                      "src": "635:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$2829",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2600,
                      "name": "rep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2585,
                      "src": "648:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$2829",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "635:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$2829",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 2602,
                  "nodeType": "ExpressionStatement",
                  "src": "635:16:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2603,
                      "name": "m_amountOfREPToDisputeWith",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2581,
                      "src": "657:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2604,
                      "name": "amountOfREPToDisputeWith",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2587,
                      "src": "686:24:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "657:53:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2606,
                  "nodeType": "ExpressionStatement",
                  "src": "657:53:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2608,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2583,
                        "src": "726:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2609,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2589,
                        "src": "733:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2610,
                        "name": "feeWindowId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2591,
                        "src": "741:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2611,
                        "name": "payoutNumerators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2594,
                        "src": "754:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2612,
                        "name": "invalid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2596,
                        "src": "772:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2607,
                      "name": "baseInit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1149,
                      "src": "717:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256[] memory,bool)"
                      }
                    },
                    "id": 2613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "717:63:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2614,
                  "nodeType": "ExpressionStatement",
                  "src": "717:63:15"
                }
              ]
            },
            "documentation": null,
            "id": 2616,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2583,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2616,
                  "src": "452:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2582,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "452:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2585,
                  "name": "rep",
                  "nodeType": "VariableDeclaration",
                  "scope": 2616,
                  "src": "471:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MockERC20_$2829",
                    "typeString": "contract MockERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2584,
                    "name": "MockERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2829,
                    "src": "471:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$2829",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2587,
                  "name": "amountOfREPToDisputeWith",
                  "nodeType": "VariableDeclaration",
                  "scope": 2616,
                  "src": "490:32:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2586,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "490:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2589,
                  "name": "market",
                  "nodeType": "VariableDeclaration",
                  "scope": 2616,
                  "src": "528:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2588,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2591,
                  "name": "feeWindowId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2616,
                  "src": "548:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2594,
                  "name": "payoutNumerators",
                  "nodeType": "VariableDeclaration",
                  "scope": 2616,
                  "src": "573:26:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2592,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "573:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2593,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "573:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2596,
                  "name": "invalid",
                  "nodeType": "VariableDeclaration",
                  "scope": 2616,
                  "src": "605:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2595,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "605:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "446:175:15"
            },
            "payable": false,
            "returnParameters": {
              "id": 2598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "629:0:15"
            },
            "scope": 2703,
            "src": "435:350:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2677,
              "nodeType": "Block",
              "src": "872:533:15",
              "statements": [
                {
                  "assignments": [
                    2625
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2625,
                      "name": "amountToCreate",
                      "nodeType": "VariableDeclaration",
                      "scope": 2678,
                      "src": "878:22:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2624,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "878:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2627,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2626,
                    "name": "m_amountOfREPToDisputeWith",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2581,
                    "src": "903:26:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "878:51:15"
                },
                {
                  "assignments": [
                    2629
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2629,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2678,
                      "src": "935:15:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2628,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "935:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2634,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2632,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3800,
                        "src": "974:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockDisputer_$2703",
                          "typeString": "contract MockDisputer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockDisputer_$2703",
                          "typeString": "contract MockDisputer"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2630,
                        "name": "m_rep_mock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2577,
                        "src": "953:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$2829",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 2631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3195,
                      "src": "953:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "953:26:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "935:44:15"
                },
                {
                  "assignments": [
                    2636
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2636,
                      "name": "amountToDestroy",
                      "nodeType": "VariableDeclaration",
                      "scope": 2678,
                      "src": "985:23:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2635,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "985:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2643,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2637,
                        "name": "amountToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2625,
                        "src": "1011:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2638,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2629,
                        "src": "1028:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1011:24:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "id": 2641,
                      "name": "amountToCreate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2625,
                      "src": "1048:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1011:51:15",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 2640,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2629,
                      "src": "1038:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "985:77:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2646,
                              "name": "m_disputeToken_mock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2579,
                              "src": "1108:19:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$2829",
                                "typeString": "contract MockERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockERC20_$2829",
                                "typeString": "contract MockERC20"
                              }
                            ],
                            "id": 2645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1100:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1100:28:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1132:1:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1100:33:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2644,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3730,
                      "src": "1093:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1093:41:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2651,
                  "nodeType": "ExpressionStatement",
                  "src": "1093:41:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2652,
                      "name": "m_disputeToken_mock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2579,
                      "src": "1140:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$2829",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1162:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockERC20_$2829_$",
                          "typeString": "function () returns (contract MockERC20)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 2653,
                          "name": "MockERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2829,
                          "src": "1166:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$2829",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 2655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1162:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$2829",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "1140:37:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$2829",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 2657,
                  "nodeType": "ExpressionStatement",
                  "src": "1140:37:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2661,
                        "name": "amountToDestroy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2636,
                        "src": "1199:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2658,
                        "name": "m_rep_mock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2577,
                        "src": "1183:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$2829",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 2660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3615,
                      "src": "1183:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1183:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2663,
                  "nodeType": "ExpressionStatement",
                  "src": "1183:32:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2664,
                      "name": "m_amountOfREPToDisputeWith",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2581,
                      "src": "1294:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "383038303830",
                      "id": 2665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1324:6:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_808080_by_1",
                        "typeString": "int_const 808080"
                      },
                      "value": "808080"
                    },
                    "src": "1294:36:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2676,
                  "nodeType": "IfStatement",
                  "src": "1290:111:15",
                  "trueBody": {
                    "id": 2675,
                    "nodeType": "Block",
                    "src": "1332:69:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2670,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3800,
                                  "src": "1372:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockDisputer_$2703",
                                    "typeString": "contract MockDisputer"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 2671,
                                  "name": "amountToCreate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2625,
                                  "src": "1378:14:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockDisputer_$2703",
                                    "typeString": "contract MockDisputer"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2668,
                                  "name": "m_disputeToken_mock",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2579,
                                  "src": "1347:19:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockERC20_$2829",
                                    "typeString": "contract MockERC20"
                                  }
                                },
                                "id": 2669,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mint",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3656,
                                "src": "1347:24:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 2672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1347:46:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2667,
                            "name": "assert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3730,
                            "src": "1340:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 2673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1340:54:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2674,
                        "nodeType": "ExpressionStatement",
                        "src": "1340:54:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 2678,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2621,
                    "name": "feeReceiver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2618,
                    "src": "859:11:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2622,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2620,
                  "name": "withDisputeBoilerplate",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1224,
                  "src": "836:22:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "836:35:15"
              }
            ],
            "name": "dispute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2618,
                  "name": "feeReceiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 2678,
                  "src": "806:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2617,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "806:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "805:21:15"
            },
            "payable": false,
            "returnParameters": {
              "id": 2623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "872:0:15"
            },
            "scope": 2703,
            "src": "789:616:15",
            "stateMutability": "nonpayable",
            "superFunction": 2488,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2685,
              "nodeType": "Block",
              "src": "1462:28:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2683,
                    "name": "m_rep_mock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2577,
                    "src": "1475:10:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$2829",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "functionReturnParameters": 2682,
                  "id": 2684,
                  "nodeType": "Return",
                  "src": "1468:17:15"
                }
              ]
            },
            "documentation": null,
            "id": 2686,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getREPImpl",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1428:2:15"
            },
            "payable": false,
            "returnParameters": {
              "id": 2682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2681,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2686,
                  "src": "1454:6:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3726",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2680,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3726,
                    "src": "1454:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3726",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1453:8:15"
            },
            "scope": 2703,
            "src": "1409:81:15",
            "stateMutability": "view",
            "superFunction": 1300,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2701,
              "nodeType": "Block",
              "src": "1563:84:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2693,
                              "name": "m_disputeToken_mock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2579,
                              "src": "1584:19:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$2829",
                                "typeString": "contract MockERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockERC20_$2829",
                                "typeString": "contract MockERC20"
                              }
                            ],
                            "id": 2692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1576:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1576:28:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1608:1:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1576:33:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2691,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3730,
                      "src": "1569:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1569:41:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2698,
                  "nodeType": "ExpressionStatement",
                  "src": "1569:41:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2699,
                    "name": "m_disputeToken_mock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2579,
                    "src": "1623:19:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$2829",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "functionReturnParameters": 2690,
                  "id": 2700,
                  "nodeType": "Return",
                  "src": "1616:26:15"
                }
              ]
            },
            "documentation": null,
            "id": 2702,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getDisputeTokenAddressImpl",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2687,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1529:2:15"
            },
            "payable": false,
            "returnParameters": {
              "id": 2690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2689,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2702,
                  "src": "1555:6:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3726",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2688,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3726,
                    "src": "1555:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3726",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1554:8:15"
            },
            "scope": 2703,
            "src": "1494:153:15",
            "stateMutability": "view",
            "superFunction": 1305,
            "visibility": "internal"
          }
        ],
        "scope": 2704,
        "src": "283:1366:15"
      }
    ],
    "src": "0:1650:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-11-01T00:44:05.515Z"
}