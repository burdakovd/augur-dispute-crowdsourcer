{
  "contractName": "MockDisputer",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "m_disputeToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "m_feeReceiver",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "m_rep",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "feeReceiver",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "approveManagerToSpendDisputeTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "hasDisputed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "m_owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "rep",
          "type": "address"
        },
        {
          "name": "amountOfREPToDisputeWith",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "feeReceiver",
          "type": "address"
        }
      ],
      "name": "dispute",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getREP",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDisputeTokenAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005257600080fd5b5060405160608061282583398101806040528101908080519060200190929190805190602001909291908051906020019092919050505081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100d2610306565b604051809103906000f0801580156100ee573d6000803e3d6000fd5b50600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060048190555061014e83610156640100000000026401000000009004565b505050610316565b6000816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101af6102dc640100000000026401000000009004565b90508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b36000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561029557600080fd5b505af11580156102a9573d6000803e3d6000fd5b505050506040513d60208110156102bf57600080fd5b810190808051906020019092919050505015156102d857fe5b5050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6040516119da80610e4b83390190565b610b26806103256000396000f3006080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632e602752146100b45780633764ea001461010b57806355af7a83146101625780636a6be1d9146101b95780636f2c83ee14610210578063893d20e814610267578063b3f00674146102be578063cadbbf6314610315578063d18959a21461032c578063deff41c11461035b578063f75f9f7b146103b2575b600080fd5b3480156100c057600080fd5b506100c96103f5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561011757600080fd5b5061012061041f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561016e57600080fd5b50610177610445565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101c557600080fd5b506101ce61046b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561021c57600080fd5b50610225610491565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561027357600080fd5b5061027c6104bb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102ca57600080fd5b506102d36104e4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032157600080fd5b5061032a61050e565b005b34801561033857600080fd5b50610341610644565b604051808215151515815260200191505060405180910390f35b34801561036757600080fd5b50610370610687565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103be57600080fd5b506103f3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106ac565b005b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006105186103f5565b90508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b36000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156105fe57600080fd5b505af1158015610612573d6000803e3d6000fd5b505050506040513d602081101561062857600080fd5b8101908080519060200190929190505050151561064157fe5b50565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008360008173ffffffffffffffffffffffffffffffffffffffff1614151515610741576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4d75737420686176652076616c6964206665652072656365697665720000000081525060200191505060405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156107f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f43616e206f6e6c792064697370757465206f6e6365000000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004549350600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156108f457600080fd5b505af1158015610908573d6000803e3d6000fd5b505050506040513d602081101561091e57600080fd5b8101908080519060200190929190505050925082841161093e5783610940565b825b9150600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b1580156109d357600080fd5b505af11580156109e7573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930866040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610ab057600080fd5b505af1158015610ac4573d6000803e3d6000fd5b505050506040513d6020811015610ada57600080fd5b81019080805190602001909291905050501515610af357fe5b50505050505600a165627a7a723058201c658e0974506aaf4f936154747d1d436b705b49657da659dc9e3c00947e8528002960806040526200001e3362000024640100000000026401000000009004565b620001e6565b620000488160036200008e6401000000000262001659179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515620000cb57600080fd5b620000e6828262000151640100000000026401000000009004565b151515620000f357600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156200018f57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6117e480620001f66000396000f3006080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b3146100d557806318160ddd1461013a57806323b872dd1461016557806339509351146101ea57806340c10f191461024f57806342966c68146102b457806370a08231146102e157806379cc679014610338578063983b2d561461038557806398650275146103c8578063a457c2d7146103df578063a9059cbb14610444578063aa271e1a146104a9578063dd62ed3e14610504575b600080fd5b3480156100e157600080fd5b50610120600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061057b565b604051808215151515815260200191505060405180910390f35b34801561014657600080fd5b5061014f6106a8565b6040518082815260200191505060405180910390f35b34801561017157600080fd5b506101d0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106b2565b604051808215151515815260200191505060405180910390f35b3480156101f657600080fd5b50610235600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610864565b604051808215151515815260200191505060405180910390f35b34801561025b57600080fd5b5061029a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a9b565b604051808215151515815260200191505060405180910390f35b3480156102c057600080fd5b506102df60048036038101908080359060200190929190505050610ac5565b005b3480156102ed57600080fd5b50610322600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ad2565b6040518082815260200191505060405180910390f35b34801561034457600080fd5b50610383600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b1a565b005b34801561039157600080fd5b506103c6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b28565b005b3480156103d457600080fd5b506103dd610b48565b005b3480156103eb57600080fd5b5061042a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b53565b604051808215151515815260200191505060405180910390f35b34801561045057600080fd5b5061048f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d8a565b604051808215151515815260200191505060405180910390f35b3480156104b557600080fd5b506104ea600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610da1565b604051808215151515815260200191505060405180910390f35b34801561051057600080fd5b50610565600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dbe565b6040518082815260200191505060405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156105b857600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600254905090565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561073f57600080fd5b6107ce82600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610859848484610e66565b600190509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156108a157600080fd5b61093082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461107f90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000610aa633610da1565b1515610ab157600080fd5b610abb83836110a0565b6001905092915050565b610acf33826111de565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610b248282611369565b5050565b610b3133610da1565b1515610b3c57600080fd5b610b4581611511565b50565b610b513361156b565b565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610b9057600080fd5b610c1f82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000610d97338484610e66565b6001905092915050565b6000610db78260036115c590919063ffffffff16565b9050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080838311151515610e5757600080fd5b82840390508091505092915050565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151515610eb357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610eef57600080fd5b610f40816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610fd3816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461107f90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080828401905083811015151561109657600080fd5b8091505092915050565b60008273ffffffffffffffffffffffffffffffffffffffff16141515156110c657600080fd5b6110db8160025461107f90919063ffffffff16565b600281905550611132816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461107f90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008273ffffffffffffffffffffffffffffffffffffffff161415151561120457600080fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115151561125157600080fd5b61126681600254610e4590919063ffffffff16565b6002819055506112bd816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481111515156113f457600080fd5b61148381600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061150d82826111de565b5050565b61152581600361165990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b61157f81600361170990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561160257600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561169557600080fd5b61169f82826115c5565b1515156116ab57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561174557600080fd5b61174f82826115c5565b151561175a57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505600a165627a7a723058201570821f05bf0cbf8c63db9c538a204516db78687c2b8692cf0da89621983e480029",
  "deployedBytecode": "0x6080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632e602752146100b45780633764ea001461010b57806355af7a83146101625780636a6be1d9146101b95780636f2c83ee14610210578063893d20e814610267578063b3f00674146102be578063cadbbf6314610315578063d18959a21461032c578063deff41c11461035b578063f75f9f7b146103b2575b600080fd5b3480156100c057600080fd5b506100c96103f5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561011757600080fd5b5061012061041f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561016e57600080fd5b50610177610445565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101c557600080fd5b506101ce61046b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561021c57600080fd5b50610225610491565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561027357600080fd5b5061027c6104bb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102ca57600080fd5b506102d36104e4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032157600080fd5b5061032a61050e565b005b34801561033857600080fd5b50610341610644565b604051808215151515815260200191505060405180910390f35b34801561036757600080fd5b50610370610687565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103be57600080fd5b506103f3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106ac565b005b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006105186103f5565b90508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b36000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156105fe57600080fd5b505af1158015610612573d6000803e3d6000fd5b505050506040513d602081101561062857600080fd5b8101908080519060200190929190505050151561064157fe5b50565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008360008173ffffffffffffffffffffffffffffffffffffffff1614151515610741576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4d75737420686176652076616c6964206665652072656365697665720000000081525060200191505060405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156107f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f43616e206f6e6c792064697370757465206f6e6365000000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004549350600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156108f457600080fd5b505af1158015610908573d6000803e3d6000fd5b505050506040513d602081101561091e57600080fd5b8101908080519060200190929190505050925082841161093e5783610940565b825b9150600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b1580156109d357600080fd5b505af11580156109e7573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930866040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610ab057600080fd5b505af1158015610ac4573d6000803e3d6000fd5b505050506040513d6020811015610ada57600080fd5b81019080805190602001909291905050501515610af357fe5b50505050505600a165627a7a723058201c658e0974506aaf4f936154747d1d436b705b49657da659dc9e3c00947e85280029",
  "sourceMap": "283:1183:10:-;;;246:1:0;215:32;;;;;;;;;;;;;;;;;;;;425:360:10;8:9:-1;5:2;;;30:1;27;20:12;5:2;425:360:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;538:3;530:5;;:11;;;;;;;;;;;;;;;;;;683:15;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;683:15:10;666:14;;:32;;;;;;;;;;;;;;;;;;734:24;705:26;:53;;;;765:15;774:5;765:8;;;:15;;;:::i;:::-;425:360;;;283:1183;;359:142:0;429:10;417:5;407:7;;:15;;;;;;;;;;;;;;;;;;442:8;:6;;;:8;;;:::i;:::-;429:21;;463:3;:11;;;475:7;;;;;;;;;;;484:10;463:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;463:32:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;463:32:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;463:32:0;;;;;;;;;;;;;;;;456:40;;;;;;359:142;;:::o;1176:70:10:-;1215:6;1236:5;;;;;;;;;;;1229:12;;1176:70;:::o;283:1183::-;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "283:1183:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1250:214;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1250:214:10;;;;;;;;;;;;;;;;;;;;;;;;;;;351:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;351:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;215:32:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;215:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;325:22:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;325:22:10;;;;;;;;;;;;;;;;;;;;;;;;;;;1176:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1176:70:10;;;;;;;;;;;;;;;;;;;;;;;;;;;505:77:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;505:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;898:86;;8:9:-1;5:2;;;30:1;27;20:12;5:2;898:86:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1057:181;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1057:181:0;;;;;;806:88;;8:9:-1;5:2;;;30:1;27;20:12;5:2;806:88:0;;;;;;;;;;;;;;;;;;;;;;;;;;;189:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;189:22:0;;;;;;;;;;;;;;;;;;;;;;;;;;;789:383:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;789:383:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;1250:214;1305:6;1445:14;;;;;;;;;;;1438:21;;1250:214;:::o;351:31::-;;;;;;;;;;;;;:::o;215:32:0:-;;;;;;;;;;;;;:::o;325:22:10:-;;;;;;;;;;;;;:::o;1176:70::-;1215:6;1236:5;;;;;;;;;;;1229:12;;1176:70;:::o;505:77:0:-;548:7;570;;;;;;;;;;;563:14;;505:77;:::o;898:86::-;944:7;966:13;;;;;;;;;;;959:20;;898:86;:::o;1057:181::-;1118:26;1147:24;:22;:24::i;:::-;1118:53;;1184:19;:27;;;1212:7;;;;;;;;;;;1221:10;1184:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1184:48:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1184:48:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1184:48:0;;;;;;;;;;;;;;;;1177:56;;;;;;1057:181;:::o;806:88::-;852:4;888:1;871:13;;;;;;;;;;;:18;;;;864:25;;806:88;:::o;189:22::-;;;;;;;;;;;;;:::o;789:383:10:-;875:22;932:15;977:23;856:11;665:1:0;650:11;:16;;;;642:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;730:1;713:13;;;;;;;;;;;:18;;;705:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;779:11;763:13;;:27;;;;;;;;;;;;;;;;;;900:26:10;;875:51;;950:5;;;;;;;;;;;:15;;;966:4;950:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;950:21:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;950:21:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;950:21:10;;;;;;;;;;;;;;;;932:39;;1020:7;1003:14;:24;:51;;1040:14;1003:51;;;1030:7;1003:51;977:77;;1085:5;;;;;;;;;;;:10;;;1096:15;1085:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1085:27:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1085:27:10;;;;1125:14;;;;;;;;;;;:19;;;1145:4;1151:14;1125:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1125:41:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1125:41:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1125:41:10;;;;;;;;;;;;;;;;1118:49;;;;;;789:383;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"../BaseDisputer.sol\";\nimport \"../IDisputer.sol\";\nimport \"./MockERC20.sol\";\n\n/**\n * Version of disputer that doesn't really interact with Augur and instead\n * pretends to have disputed, by minting/burning tokens.\n *\n * Used to test crowdsourcer.\n */\ncontract MockDisputer is BaseDisputer {\n  MockERC20 public m_rep;\n  MockERC20 public m_disputeToken;\n  uint256 m_amountOfREPToDisputeWith;\n\n  constructor(\n    address owner,\n    MockERC20 rep,\n    uint256 amountOfREPToDisputeWith\n  ) public {\n    m_rep = rep;\n    // TODO: to make it behave more like real disputer, do not allow seeing\n    // dispute token until dispute happens\n    m_disputeToken = new MockERC20();\n\n    m_amountOfREPToDisputeWith = amountOfREPToDisputeWith;\n\n    baseInit(owner);\n  }\n\n  function dispute(address feeReceiver) external withDisputePreamble(feeReceiver) {\n    uint256 amountToCreate = m_amountOfREPToDisputeWith;\n    uint256 balance = m_rep.balanceOf(this);\n    uint256 amountToDestroy = amountToCreate > balance ? balance : amountToCreate;\n\n    // simulate dispute\n    m_rep.burn(amountToDestroy);\n    assert(m_disputeToken.mint(this, amountToCreate));\n  }\n\n  function getREP() public view returns (IERC20) {\n    return m_rep;\n  }\n\n  function getDisputeTokenAddress() public view returns (IERC20) {\n    // TODO: to make it behave more like real disputer, do not allow seeing\n    // dispute token until dispute happens\n    return m_disputeToken;\n  }\n}\n",
  "sourcePath": "/src/contracts/mocks/MockDisputer.sol",
  "ast": {
    "absolutePath": "/src/contracts/mocks/MockDisputer.sol",
    "exportedSymbols": {
      "MockDisputer": [
        932
      ]
    },
    "id": 933,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 833,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:10"
      },
      {
        "absolutePath": "/src/contracts/BaseDisputer.sol",
        "file": "../BaseDisputer.sol",
        "id": 834,
        "nodeType": "ImportDirective",
        "scope": 933,
        "sourceUnit": 119,
        "src": "26:29:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/src/contracts/IDisputer.sol",
        "file": "../IDisputer.sol",
        "id": 835,
        "nodeType": "ImportDirective",
        "scope": 933,
        "sourceUnit": 821,
        "src": "56:26:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/src/contracts/mocks/MockERC20.sol",
        "file": "./MockERC20.sol",
        "id": 836,
        "nodeType": "ImportDirective",
        "scope": 933,
        "sourceUnit": 1048,
        "src": "83:25:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 837,
              "name": "BaseDisputer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 118,
              "src": "308:12:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseDisputer_$118",
                "typeString": "contract BaseDisputer"
              }
            },
            "id": 838,
            "nodeType": "InheritanceSpecifier",
            "src": "308:12:10"
          }
        ],
        "contractDependencies": [
          118,
          820,
          1047
        ],
        "contractKind": "contract",
        "documentation": "Version of disputer that doesn't really interact with Augur and instead\npretends to have disputed, by minting/burning tokens.\n * Used to test crowdsourcer.",
        "fullyImplemented": true,
        "id": 932,
        "linearizedBaseContracts": [
          932,
          118,
          820
        ],
        "name": "MockDisputer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 840,
            "name": "m_rep",
            "nodeType": "VariableDeclaration",
            "scope": 932,
            "src": "325:22:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$1047",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 839,
              "name": "MockERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1047,
              "src": "325:9:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$1047",
                "typeString": "contract MockERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 842,
            "name": "m_disputeToken",
            "nodeType": "VariableDeclaration",
            "scope": 932,
            "src": "351:31:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$1047",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 841,
              "name": "MockERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1047,
              "src": "351:9:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$1047",
                "typeString": "contract MockERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 844,
            "name": "m_amountOfREPToDisputeWith",
            "nodeType": "VariableDeclaration",
            "scope": 932,
            "src": "386:34:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 843,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "386:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 871,
              "nodeType": "Block",
              "src": "524:261:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 853,
                      "name": "m_rep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 840,
                      "src": "530:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$1047",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 854,
                      "name": "rep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 848,
                      "src": "538:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$1047",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "530:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$1047",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 856,
                  "nodeType": "ExpressionStatement",
                  "src": "530:11:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 857,
                      "name": "m_disputeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 842,
                      "src": "666:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$1047",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "683:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockERC20_$1047_$",
                          "typeString": "function () returns (contract MockERC20)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 858,
                          "name": "MockERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1047,
                          "src": "687:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$1047",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "683:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$1047",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "666:32:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$1047",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 862,
                  "nodeType": "ExpressionStatement",
                  "src": "666:32:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 863,
                      "name": "m_amountOfREPToDisputeWith",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 844,
                      "src": "705:26:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 864,
                      "name": "amountOfREPToDisputeWith",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 850,
                      "src": "734:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "705:53:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 866,
                  "nodeType": "ExpressionStatement",
                  "src": "705:53:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 868,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 846,
                        "src": "774:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 867,
                      "name": "baseInit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "765:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "765:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 870,
                  "nodeType": "ExpressionStatement",
                  "src": "765:15:10"
                }
              ]
            },
            "documentation": null,
            "id": 872,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 846,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "442:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "442:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 848,
                  "name": "rep",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "461:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MockERC20_$1047",
                    "typeString": "contract MockERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 847,
                    "name": "MockERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1047,
                    "src": "461:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$1047",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 850,
                  "name": "amountOfREPToDisputeWith",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "480:32:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 849,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "480:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "436:80:10"
            },
            "payable": false,
            "returnParameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "524:0:10"
            },
            "scope": 932,
            "src": "425:360:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 914,
              "nodeType": "Block",
              "src": "869:303:10",
              "statements": [
                {
                  "assignments": [
                    881
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 881,
                      "name": "amountToCreate",
                      "nodeType": "VariableDeclaration",
                      "scope": 915,
                      "src": "875:22:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 880,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "875:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 883,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 882,
                    "name": "m_amountOfREPToDisputeWith",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 844,
                    "src": "900:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "875:51:10"
                },
                {
                  "assignments": [
                    885
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 885,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 915,
                      "src": "932:15:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 884,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "932:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 890,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 888,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2008,
                        "src": "966:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockDisputer_$932",
                          "typeString": "contract MockDisputer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockDisputer_$932",
                          "typeString": "contract MockDisputer"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 886,
                        "name": "m_rep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 840,
                        "src": "950:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$1047",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1413,
                      "src": "950:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "950:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "932:39:10"
                },
                {
                  "assignments": [
                    892
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 892,
                      "name": "amountToDestroy",
                      "nodeType": "VariableDeclaration",
                      "scope": 915,
                      "src": "977:23:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 891,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "977:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 899,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 893,
                        "name": "amountToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 881,
                        "src": "1003:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 894,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 885,
                        "src": "1020:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1003:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "id": 897,
                      "name": "amountToCreate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 881,
                      "src": "1040:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1003:51:10",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 896,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 885,
                      "src": "1030:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "977:77:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 903,
                        "name": "amountToDestroy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "1096:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 900,
                        "name": "m_rep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 840,
                        "src": "1085:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$1047",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1833,
                      "src": "1085:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1085:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 905,
                  "nodeType": "ExpressionStatement",
                  "src": "1085:27:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 909,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2008,
                            "src": "1145:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockDisputer_$932",
                              "typeString": "contract MockDisputer"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 910,
                            "name": "amountToCreate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 881,
                            "src": "1151:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockDisputer_$932",
                              "typeString": "contract MockDisputer"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 907,
                            "name": "m_disputeToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 842,
                            "src": "1125:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$1047",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1874,
                          "src": "1125:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1125:41:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 906,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1948,
                      "src": "1118:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1118:49:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 913,
                  "nodeType": "ExpressionStatement",
                  "src": "1118:49:10"
                }
              ]
            },
            "documentation": null,
            "id": 915,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 877,
                    "name": "feeReceiver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 874,
                    "src": "856:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 878,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 876,
                  "name": "withDisputePreamble",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 68,
                  "src": "836:19:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "836:32:10"
              }
            ],
            "name": "dispute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 874,
                  "name": "feeReceiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 915,
                  "src": "806:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "806:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "805:21:10"
            },
            "payable": false,
            "returnParameters": {
              "id": 879,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "869:0:10"
            },
            "scope": 932,
            "src": "789:383:10",
            "stateMutability": "nonpayable",
            "superFunction": 796,
            "visibility": "external"
          },
          {
            "body": {
              "id": 922,
              "nodeType": "Block",
              "src": "1223:23:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 920,
                    "name": "m_rep",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 840,
                    "src": "1236:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$1047",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "functionReturnParameters": 919,
                  "id": 921,
                  "nodeType": "Return",
                  "src": "1229:12:10"
                }
              ]
            },
            "documentation": null,
            "id": 923,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getREP",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1191:2:10"
            },
            "payable": false,
            "returnParameters": {
              "id": 919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 918,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 923,
                  "src": "1215:6:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1944",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 917,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1944,
                    "src": "1215:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1944",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1214:8:10"
            },
            "scope": 932,
            "src": "1176:70:10",
            "stateMutability": "view",
            "superFunction": 112,
            "visibility": "public"
          },
          {
            "body": {
              "id": 930,
              "nodeType": "Block",
              "src": "1313:151:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 928,
                    "name": "m_disputeToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 842,
                    "src": "1445:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$1047",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "functionReturnParameters": 927,
                  "id": 929,
                  "nodeType": "Return",
                  "src": "1438:21:10"
                }
              ]
            },
            "documentation": null,
            "id": 931,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getDisputeTokenAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1281:2:10"
            },
            "payable": false,
            "returnParameters": {
              "id": 927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 926,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 931,
                  "src": "1305:6:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1944",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 925,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1944,
                    "src": "1305:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1944",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1304:8:10"
            },
            "scope": 932,
            "src": "1250:214:10",
            "stateMutability": "view",
            "superFunction": 117,
            "visibility": "public"
          }
        ],
        "scope": 933,
        "src": "283:1183:10"
      }
    ],
    "src": "0:1467:10"
  },
  "legacyAST": {
    "absolutePath": "/src/contracts/mocks/MockDisputer.sol",
    "exportedSymbols": {
      "MockDisputer": [
        932
      ]
    },
    "id": 933,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 833,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:10"
      },
      {
        "absolutePath": "/src/contracts/BaseDisputer.sol",
        "file": "../BaseDisputer.sol",
        "id": 834,
        "nodeType": "ImportDirective",
        "scope": 933,
        "sourceUnit": 119,
        "src": "26:29:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/src/contracts/IDisputer.sol",
        "file": "../IDisputer.sol",
        "id": 835,
        "nodeType": "ImportDirective",
        "scope": 933,
        "sourceUnit": 821,
        "src": "56:26:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/src/contracts/mocks/MockERC20.sol",
        "file": "./MockERC20.sol",
        "id": 836,
        "nodeType": "ImportDirective",
        "scope": 933,
        "sourceUnit": 1048,
        "src": "83:25:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 837,
              "name": "BaseDisputer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 118,
              "src": "308:12:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseDisputer_$118",
                "typeString": "contract BaseDisputer"
              }
            },
            "id": 838,
            "nodeType": "InheritanceSpecifier",
            "src": "308:12:10"
          }
        ],
        "contractDependencies": [
          118,
          820,
          1047
        ],
        "contractKind": "contract",
        "documentation": "Version of disputer that doesn't really interact with Augur and instead\npretends to have disputed, by minting/burning tokens.\n * Used to test crowdsourcer.",
        "fullyImplemented": true,
        "id": 932,
        "linearizedBaseContracts": [
          932,
          118,
          820
        ],
        "name": "MockDisputer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 840,
            "name": "m_rep",
            "nodeType": "VariableDeclaration",
            "scope": 932,
            "src": "325:22:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$1047",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 839,
              "name": "MockERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1047,
              "src": "325:9:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$1047",
                "typeString": "contract MockERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 842,
            "name": "m_disputeToken",
            "nodeType": "VariableDeclaration",
            "scope": 932,
            "src": "351:31:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$1047",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 841,
              "name": "MockERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1047,
              "src": "351:9:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$1047",
                "typeString": "contract MockERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 844,
            "name": "m_amountOfREPToDisputeWith",
            "nodeType": "VariableDeclaration",
            "scope": 932,
            "src": "386:34:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 843,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "386:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 871,
              "nodeType": "Block",
              "src": "524:261:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 853,
                      "name": "m_rep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 840,
                      "src": "530:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$1047",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 854,
                      "name": "rep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 848,
                      "src": "538:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$1047",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "530:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$1047",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 856,
                  "nodeType": "ExpressionStatement",
                  "src": "530:11:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 857,
                      "name": "m_disputeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 842,
                      "src": "666:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$1047",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "683:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockERC20_$1047_$",
                          "typeString": "function () returns (contract MockERC20)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 858,
                          "name": "MockERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1047,
                          "src": "687:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$1047",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "683:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$1047",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "666:32:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$1047",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 862,
                  "nodeType": "ExpressionStatement",
                  "src": "666:32:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 863,
                      "name": "m_amountOfREPToDisputeWith",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 844,
                      "src": "705:26:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 864,
                      "name": "amountOfREPToDisputeWith",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 850,
                      "src": "734:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "705:53:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 866,
                  "nodeType": "ExpressionStatement",
                  "src": "705:53:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 868,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 846,
                        "src": "774:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 867,
                      "name": "baseInit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "765:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "765:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 870,
                  "nodeType": "ExpressionStatement",
                  "src": "765:15:10"
                }
              ]
            },
            "documentation": null,
            "id": 872,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 846,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "442:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "442:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 848,
                  "name": "rep",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "461:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MockERC20_$1047",
                    "typeString": "contract MockERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 847,
                    "name": "MockERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1047,
                    "src": "461:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$1047",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 850,
                  "name": "amountOfREPToDisputeWith",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "480:32:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 849,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "480:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "436:80:10"
            },
            "payable": false,
            "returnParameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "524:0:10"
            },
            "scope": 932,
            "src": "425:360:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 914,
              "nodeType": "Block",
              "src": "869:303:10",
              "statements": [
                {
                  "assignments": [
                    881
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 881,
                      "name": "amountToCreate",
                      "nodeType": "VariableDeclaration",
                      "scope": 915,
                      "src": "875:22:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 880,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "875:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 883,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 882,
                    "name": "m_amountOfREPToDisputeWith",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 844,
                    "src": "900:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "875:51:10"
                },
                {
                  "assignments": [
                    885
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 885,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 915,
                      "src": "932:15:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 884,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "932:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 890,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 888,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2008,
                        "src": "966:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockDisputer_$932",
                          "typeString": "contract MockDisputer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockDisputer_$932",
                          "typeString": "contract MockDisputer"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 886,
                        "name": "m_rep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 840,
                        "src": "950:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$1047",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1413,
                      "src": "950:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "950:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "932:39:10"
                },
                {
                  "assignments": [
                    892
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 892,
                      "name": "amountToDestroy",
                      "nodeType": "VariableDeclaration",
                      "scope": 915,
                      "src": "977:23:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 891,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "977:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 899,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 893,
                        "name": "amountToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 881,
                        "src": "1003:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 894,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 885,
                        "src": "1020:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1003:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "id": 897,
                      "name": "amountToCreate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 881,
                      "src": "1040:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1003:51:10",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 896,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 885,
                      "src": "1030:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "977:77:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 903,
                        "name": "amountToDestroy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "1096:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 900,
                        "name": "m_rep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 840,
                        "src": "1085:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$1047",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1833,
                      "src": "1085:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1085:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 905,
                  "nodeType": "ExpressionStatement",
                  "src": "1085:27:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 909,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2008,
                            "src": "1145:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockDisputer_$932",
                              "typeString": "contract MockDisputer"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 910,
                            "name": "amountToCreate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 881,
                            "src": "1151:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockDisputer_$932",
                              "typeString": "contract MockDisputer"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 907,
                            "name": "m_disputeToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 842,
                            "src": "1125:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$1047",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1874,
                          "src": "1125:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1125:41:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 906,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1948,
                      "src": "1118:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1118:49:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 913,
                  "nodeType": "ExpressionStatement",
                  "src": "1118:49:10"
                }
              ]
            },
            "documentation": null,
            "id": 915,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 877,
                    "name": "feeReceiver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 874,
                    "src": "856:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 878,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 876,
                  "name": "withDisputePreamble",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 68,
                  "src": "836:19:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "836:32:10"
              }
            ],
            "name": "dispute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 874,
                  "name": "feeReceiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 915,
                  "src": "806:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "806:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "805:21:10"
            },
            "payable": false,
            "returnParameters": {
              "id": 879,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "869:0:10"
            },
            "scope": 932,
            "src": "789:383:10",
            "stateMutability": "nonpayable",
            "superFunction": 796,
            "visibility": "external"
          },
          {
            "body": {
              "id": 922,
              "nodeType": "Block",
              "src": "1223:23:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 920,
                    "name": "m_rep",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 840,
                    "src": "1236:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$1047",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "functionReturnParameters": 919,
                  "id": 921,
                  "nodeType": "Return",
                  "src": "1229:12:10"
                }
              ]
            },
            "documentation": null,
            "id": 923,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getREP",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1191:2:10"
            },
            "payable": false,
            "returnParameters": {
              "id": 919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 918,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 923,
                  "src": "1215:6:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1944",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 917,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1944,
                    "src": "1215:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1944",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1214:8:10"
            },
            "scope": 932,
            "src": "1176:70:10",
            "stateMutability": "view",
            "superFunction": 112,
            "visibility": "public"
          },
          {
            "body": {
              "id": 930,
              "nodeType": "Block",
              "src": "1313:151:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 928,
                    "name": "m_disputeToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 842,
                    "src": "1445:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$1047",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "functionReturnParameters": 927,
                  "id": 929,
                  "nodeType": "Return",
                  "src": "1438:21:10"
                }
              ]
            },
            "documentation": null,
            "id": 931,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getDisputeTokenAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1281:2:10"
            },
            "payable": false,
            "returnParameters": {
              "id": 927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 926,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 931,
                  "src": "1305:6:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1944",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 925,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1944,
                    "src": "1305:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1944",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1304:8:10"
            },
            "scope": 932,
            "src": "1250:214:10",
            "stateMutability": "view",
            "superFunction": 117,
            "visibility": "public"
          }
        ],
        "scope": 933,
        "src": "283:1183:10"
      }
    ],
    "src": "0:1467:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-10-29T01:30:06.295Z"
}