{
  "contractName": "MockDisputer",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "m_rep_mock",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "m_params",
      "outputs": [
        {
          "name": "market",
          "type": "address"
        },
        {
          "name": "feeWindowId",
          "type": "uint256"
        },
        {
          "name": "invalid",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDisputeTokenAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "m_feeReceiver",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getREP",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "feeReceiver",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "approveManagerToSpendDisputeTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "hasDisputed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "m_owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "feeReceiver",
          "type": "address"
        }
      ],
      "name": "dispute",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "rep",
          "type": "address"
        },
        {
          "name": "amountOfREPToDisputeWith",
          "type": "uint256"
        },
        {
          "name": "market",
          "type": "address"
        },
        {
          "name": "feeWindowId",
          "type": "uint256"
        },
        {
          "name": "payoutNumerators",
          "type": "uint256[]"
        },
        {
          "name": "invalid",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    }
  ],
  "bytecode": "0x60806040526000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200005357600080fd5b5060405162002f2e38038062002f2e8339810180604052810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805182019291906020018051906020019092919050505085600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846009819055506200011d87858585856200012a640100000000026401000000009004565b5050505050505062000619565b846000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080604051908101604052808573ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001821515815250600260008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019080519060200190620002159291906200059f565b5060608201518160030160006101000a81548160ff0219169083151502179055509050506200025262000575640100000000026401000000009004565b600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b36000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156200039957600080fd5b505af1158015620003ae573d6000803e3d6000fd5b505050506040513d6020811015620003c557600080fd5b81019080805190602001909291905050501515620003df57fe5b60008473ffffffffffffffffffffffffffffffffffffffff161415156200052d57600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015620004e657600080fd5b505af1158015620004fb573d6000803e3d6000fd5b505050506040513d60208110156200051257600080fd5b810190808051906020019092919050505015156200052c57fe5b5b30600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b828054828255906000526020600020908101928215620005de579160200282015b82811115620005dd578251825591602001919060010190620005c0565b5b509050620005ed9190620005f1565b5090565b6200061691905b8082111562000612576000816000905550600101620005f8565b5090565b90565b61290580620006296000396000f3006080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306f22490146100b457806315298c771461010b5780632e6027521461017457806355af7a83146101cb5780636f2c83ee14610222578063893d20e814610279578063b3f00674146102d0578063cadbbf6314610327578063d18959a21461033e578063deff41c11461036d578063f75f9f7b146103c4575b600080fd5b3480156100c057600080fd5b506100c9610407565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561011757600080fd5b5061012061042d565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001935050505060405180910390f35b34801561018057600080fd5b50610189610472565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101d757600080fd5b506101e06104f9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561022e57600080fd5b5061023761051f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028557600080fd5b5061028e610549565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102dc57600080fd5b506102e5610572565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561033357600080fd5b5061033c6105e3565b005b34801561034a57600080fd5b5061035361071c565b604051808215151515815260200191505060405180910390f35b34801561037957600080fd5b5061038261075f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103d057600080fd5b50610405600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610784565b005b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60028060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060030160009054906101000a900460ff16905083565b60003073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156104d157600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156105bb57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006105ed610472565b90508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b36000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156106d357600080fd5b505af11580156106e7573d6000803e3d6000fd5b505050506040513d60208110156106fd57600080fd5b8101908080519060200190929190505050151561071957600080fd5b50565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600080600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561083b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f43616e206f6e6c792064697370757465206f6e6365000000000000000000000081525060200191505060405180910390fd5b610843610c06565b60008673ffffffffffffffffffffffffffffffffffffffff16141515156108d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4d75737420686176652076616c6964206665652072656365697665720000000081525060200191505060405180910390fd5b85600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061091b61051f565b94508473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156109b857600080fd5b505af11580156109cc573d6000803e3d6000fd5b505050506040513d60208110156109e257600080fd5b810190808051906020019092919050505093506109fd610c08565b92508473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610a9a57600080fd5b505af1158015610aae573d6000803e3d6000fd5b505050506040513d6020811015610ac457600080fd5b8101908080519060200190929190505050915082600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610bb357600080fd5b505af1158015610bc7573d6000803e3d6000fd5b505050506040513d6020811015610bdd57600080fd5b810190808051906020019092919050505090508381830110151515610bfe57fe5b505050505050565b565b60008060008060006009549350600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610cd257600080fd5b505af1158015610ce6573d6000803e3d6000fd5b505050506040513d6020811015610cfc57600080fd5b81019080805190602001909291905050509250828411610d1c5783610d1e565b825b9150610d28610eef565b604051809103906000f080158015610d44573d6000803e3d6000fd5b509050600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b158015610dd857600080fd5b505af1158015610dec573d6000803e3d6000fd5b50505050620c5490600954141515610ee5578073ffffffffffffffffffffffffffffffffffffffff166340c10f1930866040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610ea157600080fd5b505af1158015610eb5573d6000803e3d6000fd5b505050506040513d6020811015610ecb57600080fd5b81019080805190602001909291905050501515610ee457fe5b5b8094505050505090565b6040516119da80610f0083390190560060806040526200001e3362000024640100000000026401000000009004565b620001e6565b620000488160036200008e6401000000000262001659179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515620000cb57600080fd5b620000e6828262000151640100000000026401000000009004565b151515620000f357600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156200018f57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6117e480620001f66000396000f3006080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b3146100d557806318160ddd1461013a57806323b872dd1461016557806339509351146101ea57806340c10f191461024f57806342966c68146102b457806370a08231146102e157806379cc679014610338578063983b2d561461038557806398650275146103c8578063a457c2d7146103df578063a9059cbb14610444578063aa271e1a146104a9578063dd62ed3e14610504575b600080fd5b3480156100e157600080fd5b50610120600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061057b565b604051808215151515815260200191505060405180910390f35b34801561014657600080fd5b5061014f6106a8565b6040518082815260200191505060405180910390f35b34801561017157600080fd5b506101d0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106b2565b604051808215151515815260200191505060405180910390f35b3480156101f657600080fd5b50610235600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610864565b604051808215151515815260200191505060405180910390f35b34801561025b57600080fd5b5061029a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a9b565b604051808215151515815260200191505060405180910390f35b3480156102c057600080fd5b506102df60048036038101908080359060200190929190505050610ac5565b005b3480156102ed57600080fd5b50610322600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ad2565b6040518082815260200191505060405180910390f35b34801561034457600080fd5b50610383600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b1a565b005b34801561039157600080fd5b506103c6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b28565b005b3480156103d457600080fd5b506103dd610b48565b005b3480156103eb57600080fd5b5061042a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b53565b604051808215151515815260200191505060405180910390f35b34801561045057600080fd5b5061048f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d8a565b604051808215151515815260200191505060405180910390f35b3480156104b557600080fd5b506104ea600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610da1565b604051808215151515815260200191505060405180910390f35b34801561051057600080fd5b50610565600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dbe565b6040518082815260200191505060405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156105b857600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600254905090565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561073f57600080fd5b6107ce82600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610859848484610e66565b600190509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156108a157600080fd5b61093082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461107f90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000610aa633610da1565b1515610ab157600080fd5b610abb83836110a0565b6001905092915050565b610acf33826111de565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610b248282611369565b5050565b610b3133610da1565b1515610b3c57600080fd5b610b4581611511565b50565b610b513361156b565b565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610b9057600080fd5b610c1f82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000610d97338484610e66565b6001905092915050565b6000610db78260036115c590919063ffffffff16565b9050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080838311151515610e5757600080fd5b82840390508091505092915050565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151515610eb357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610eef57600080fd5b610f40816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610fd3816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461107f90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080828401905083811015151561109657600080fd5b8091505092915050565b60008273ffffffffffffffffffffffffffffffffffffffff16141515156110c657600080fd5b6110db8160025461107f90919063ffffffff16565b600281905550611132816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461107f90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008273ffffffffffffffffffffffffffffffffffffffff161415151561120457600080fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115151561125157600080fd5b61126681600254610e4590919063ffffffff16565b6002819055506112bd816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481111515156113f457600080fd5b61148381600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061150d82826111de565b5050565b61152581600361165990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b61157f81600361170990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561160257600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561169557600080fd5b61169f82826115c5565b1515156116ab57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561174557600080fd5b61174f82826115c5565b151561175a57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505600a165627a7a723058201570821f05bf0cbf8c63db9c538a204516db78687c2b8692cf0da89621983e480029a165627a7a7230582058136022f0e0ab6fc9363eab49f747a1b2d03a31c40fd7e331ace461605ab3bc0029",
  "deployedBytecode": "0x6080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306f22490146100b457806315298c771461010b5780632e6027521461017457806355af7a83146101cb5780636f2c83ee14610222578063893d20e814610279578063b3f00674146102d0578063cadbbf6314610327578063d18959a21461033e578063deff41c11461036d578063f75f9f7b146103c4575b600080fd5b3480156100c057600080fd5b506100c9610407565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561011757600080fd5b5061012061042d565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001935050505060405180910390f35b34801561018057600080fd5b50610189610472565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101d757600080fd5b506101e06104f9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561022e57600080fd5b5061023761051f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028557600080fd5b5061028e610549565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102dc57600080fd5b506102e5610572565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561033357600080fd5b5061033c6105e3565b005b34801561034a57600080fd5b5061035361071c565b604051808215151515815260200191505060405180910390f35b34801561037957600080fd5b5061038261075f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103d057600080fd5b50610405600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610784565b005b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60028060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060030160009054906101000a900460ff16905083565b60003073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156104d157600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156105bb57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006105ed610472565b90508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b36000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156106d357600080fd5b505af11580156106e7573d6000803e3d6000fd5b505050506040513d60208110156106fd57600080fd5b8101908080519060200190929190505050151561071957600080fd5b50565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600080600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561083b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f43616e206f6e6c792064697370757465206f6e6365000000000000000000000081525060200191505060405180910390fd5b610843610c06565b60008673ffffffffffffffffffffffffffffffffffffffff16141515156108d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4d75737420686176652076616c6964206665652072656365697665720000000081525060200191505060405180910390fd5b85600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061091b61051f565b94508473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156109b857600080fd5b505af11580156109cc573d6000803e3d6000fd5b505050506040513d60208110156109e257600080fd5b810190808051906020019092919050505093506109fd610c08565b92508473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610a9a57600080fd5b505af1158015610aae573d6000803e3d6000fd5b505050506040513d6020811015610ac457600080fd5b8101908080519060200190929190505050915082600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610bb357600080fd5b505af1158015610bc7573d6000803e3d6000fd5b505050506040513d6020811015610bdd57600080fd5b810190808051906020019092919050505090508381830110151515610bfe57fe5b505050505050565b565b60008060008060006009549350600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610cd257600080fd5b505af1158015610ce6573d6000803e3d6000fd5b505050506040513d6020811015610cfc57600080fd5b81019080805190602001909291905050509250828411610d1c5783610d1e565b825b9150610d28610eef565b604051809103906000f080158015610d44573d6000803e3d6000fd5b509050600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b158015610dd857600080fd5b505af1158015610dec573d6000803e3d6000fd5b50505050620c5490600954141515610ee5578073ffffffffffffffffffffffffffffffffffffffff166340c10f1930866040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610ea157600080fd5b505af1158015610eb5573d6000803e3d6000fd5b505050506040513d6020811015610ecb57600080fd5b81019080805190602001909291905050501515610ee457fe5b5b8094505050505090565b6040516119da80610f0083390190560060806040526200001e3362000024640100000000026401000000009004565b620001e6565b620000488160036200008e6401000000000262001659179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515620000cb57600080fd5b620000e6828262000151640100000000026401000000009004565b151515620000f357600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156200018f57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6117e480620001f66000396000f3006080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b3146100d557806318160ddd1461013a57806323b872dd1461016557806339509351146101ea57806340c10f191461024f57806342966c68146102b457806370a08231146102e157806379cc679014610338578063983b2d561461038557806398650275146103c8578063a457c2d7146103df578063a9059cbb14610444578063aa271e1a146104a9578063dd62ed3e14610504575b600080fd5b3480156100e157600080fd5b50610120600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061057b565b604051808215151515815260200191505060405180910390f35b34801561014657600080fd5b5061014f6106a8565b6040518082815260200191505060405180910390f35b34801561017157600080fd5b506101d0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106b2565b604051808215151515815260200191505060405180910390f35b3480156101f657600080fd5b50610235600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610864565b604051808215151515815260200191505060405180910390f35b34801561025b57600080fd5b5061029a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a9b565b604051808215151515815260200191505060405180910390f35b3480156102c057600080fd5b506102df60048036038101908080359060200190929190505050610ac5565b005b3480156102ed57600080fd5b50610322600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ad2565b6040518082815260200191505060405180910390f35b34801561034457600080fd5b50610383600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b1a565b005b34801561039157600080fd5b506103c6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b28565b005b3480156103d457600080fd5b506103dd610b48565b005b3480156103eb57600080fd5b5061042a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b53565b604051808215151515815260200191505060405180910390f35b34801561045057600080fd5b5061048f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d8a565b604051808215151515815260200191505060405180910390f35b3480156104b557600080fd5b506104ea600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610da1565b604051808215151515815260200191505060405180910390f35b34801561051057600080fd5b50610565600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dbe565b6040518082815260200191505060405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156105b857600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600254905090565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561073f57600080fd5b6107ce82600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610859848484610e66565b600190509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156108a157600080fd5b61093082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461107f90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000610aa633610da1565b1515610ab157600080fd5b610abb83836110a0565b6001905092915050565b610acf33826111de565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610b248282611369565b5050565b610b3133610da1565b1515610b3c57600080fd5b610b4581611511565b50565b610b513361156b565b565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610b9057600080fd5b610c1f82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000610d97338484610e66565b6001905092915050565b6000610db78260036115c590919063ffffffff16565b9050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080838311151515610e5757600080fd5b82840390508091505092915050565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151515610eb357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610eef57600080fd5b610f40816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610fd3816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461107f90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080828401905083811015151561109657600080fd5b8091505092915050565b60008273ffffffffffffffffffffffffffffffffffffffff16141515156110c657600080fd5b6110db8160025461107f90919063ffffffff16565b600281905550611132816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461107f90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008273ffffffffffffffffffffffffffffffffffffffff161415151561120457600080fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115151561125157600080fd5b61126681600254610e4590919063ffffffff16565b6002819055506112bd816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481111515156113f457600080fd5b61148381600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4590919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061150d82826111de565b5050565b61152581600361165990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b61157f81600361170990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561160257600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561169557600080fd5b61169f82826115c5565b1515156116ab57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561174557600080fd5b61174f82826115c5565b151561175a57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505600a165627a7a723058201570821f05bf0cbf8c63db9c538a204516db78687c2b8692cf0da89621983e480029a165627a7a7230582058136022f0e0ab6fc9363eab49f747a1b2d03a31c40fd7e331ace461605ab3bc0029",
  "sourceMap": "283:1166:17:-;;;277:1:0;246:32;;;;;;;;;;;;;;;;;;;;395:349:17;8:9:-1;5:2;;;30:1;27;20:12;5:2;395:349:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;607:3;594:10;;:16;;;;;;;;;;;;;;;;;;645:24;616:26;:53;;;;676:63;685:5;692:6;700:11;713:16;731:7;676:8;;;:63;;;:::i;:::-;395:349;;;;;;;283:1166;;472:942:0;632:5;622:7;;:15;;;;;;;;;;;;;;;;;;654:99;;;;;;;;;683:6;654:99;;;;;;697:11;654:99;;;;716:16;654:99;;;;740:7;654:99;;;;;643:8;:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;871:12;:10;;;:12;;;:::i;:::-;863:5;;:20;;;;;;;;;;;;;;;;;;896:5;;;;;;;;;;;:13;;;910:7;;;;;;;;;;;919:10;896:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;896:34:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;896:34:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;896:34:0;;;;;;;;;;;;;;;;889:42;;;;;;961:1;950:6;942:20;;;;938:321;;;1218:5;;;;;;;;;;;:13;;;1232:6;1240:10;1218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1218:33:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1218:33:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1218:33:0;;;;;;;;;;;;;;;;1211:41;;;;;;938:321;1403:4;1371:14;;:38;;;;;;;;;;;;;;;;;;472:942;;;;;:::o;1324:81:17:-;1369:6;1390:10;;;;;;;;;;;1383:17;;1324:81;:::o;283:1166::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "283:1166:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;325:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;325:27:17;;;;;;;;;;;;;;;;;;;;;;;;;;;282:37:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;282:37:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2729:149;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2729:149:0;;;;;;;;;;;;;;;;;;;;;;;;;;;246:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;246:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;2655:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2655:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1418:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1418:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;2277:119;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2277:119:0;;;;;;;;;;;;;;;;;;;;;;;;;;;2469:182;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2469:182:0;;;;;;2185:88;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2185:88:0;;;;;;;;;;;;;;;;;;;;;;;;;;;220:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;220:22:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1598:583;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1598:583:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;325:27:17;;;;;;;;;;;;;:::o;282:37:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2729:149::-;2784:6;2839:4;2806:39;;:14;;;;;;;;;;;:39;;;;2798:48;;;;;;;;2859:14;;;;;;;;;;;2852:21;;2729:149;:::o;246:32::-;;;;;;;;;;;;;:::o;2655:70::-;2694:6;2715:5;;;;;;;;;;;2708:12;;2655:70;:::o;1418:77::-;1461:7;1483;;;;;;;;;;;1476:14;;1418:77;:::o;2277:119::-;2323:7;2363:1;2346:13;;;;;;;;;;;:18;;;;2338:27;;;;;;;;2378:13;;;;;;;;;;;2371:20;;2277:119;:::o;2469:182::-;2530:26;2559:24;:22;:24::i;:::-;2530:53;;2597:19;:27;;;2625:7;;;;;;;;;;;2634:10;2597:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2597:48:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2597:48:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2597:48:0;;;;;;;;;;;;;;;;2589:57;;;;;;;;2469:182;:::o;2185:88::-;2231:4;2267:1;2250:13;;;;;;;;;;;:18;;;;2243:25;;2185:88;:::o;220:22::-;;;;;;;;;;;;;:::o;1598:583::-;1829:10;1856:25;1909:19;1950:23;2036:32;1676:1;1659:13;;;;;;;;;;;:18;;;1651:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1709:17;:15;:17::i;:::-;1755:1;1740:11;:16;;;;1732:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1811:11;1795:13;;:27;;;;;;;;;;;;;;;;;;1842:8;:6;:8::i;:::-;1829:21;;1884:3;:13;;;1898:4;1884:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1884:19:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1884:19:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1884:19:0;;;;;;;;;;;;;;;;1856:47;;1931:13;:11;:13::i;:::-;1909:35;;1976:3;:13;;;1990:4;1976:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1976:19:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1976:19:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1976:19:0;;;;;;;;;;;;;;;;1950:45;;2018:12;2001:14;;:29;;;;;;;;;;;;;;;;;;2071:12;:22;;;2094:4;2071:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2071:28:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2071:28:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2071:28:0;;;;;;;;;;;;;;;;2036:63;;2158:17;2130:24;2112:15;:42;:63;;2105:71;;;;;;1598:583;;;;;;:::o;1409:38:17:-;:::o;748:572::-;789:6;803:22;860:15;910:23;1018:27;828:26;;803:51;;878:10;;;;;;;;;;;:20;;;899:4;878:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;878:26:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;878:26:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;878:26:17;;;;;;;;;;;;;;;;860:44;;953:7;936:14;:24;:51;;973:14;936:51;;;963:7;936:51;910:77;;1048:15;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1048:15:17;1018:45;;1069:10;;;;;;;;;;;:15;;;1085;1069:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1069:32:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1069:32:17;;;;1210:6;1180:26;;:36;;1176:109;;;1233:17;:22;;;1256:4;1262:14;1233:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1233:44:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1233:44:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1233:44:17;;;;;;;;;;;;;;;;1226:52;;;;;;1176:109;1298:17;1291:24;;748:572;;;;;:::o;283:1166::-;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"../BaseDisputer.sol\";\nimport \"../IDisputer.sol\";\nimport \"./MockERC20.sol\";\n\n/**\n * Version of disputer that doesn't really interact with Augur and instead\n * pretends to have disputed, by minting/burning tokens.\n *\n * Used to test crowdsourcer.\n */\ncontract MockDisputer is BaseDisputer {\n  MockERC20 public m_rep_mock;\n  uint256 m_amountOfREPToDisputeWith;\n\n  constructor(\n    address owner,\n    MockERC20 rep,\n    uint256 amountOfREPToDisputeWith,\n    Market market,\n    uint256 feeWindowId,\n    uint256[] payoutNumerators,\n    bool invalid\n  ) public {\n    m_rep_mock = rep;\n    m_amountOfREPToDisputeWith = amountOfREPToDisputeWith;\n\n    baseInit(owner, market, feeWindowId, payoutNumerators, invalid);\n  }\n\n  function disputeImpl() internal returns (IERC20) {\n    uint256 amountToCreate = m_amountOfREPToDisputeWith;\n    uint256 balance = m_rep_mock.balanceOf(this);\n    uint256 amountToDestroy = amountToCreate > balance ? balance : amountToCreate;\n\n    // simulate dispute\n    MockERC20 disputeToken_mock = new MockERC20();\n    m_rep_mock.burn(amountToDestroy);\n\n    // 808080 is special value used in tests to simulate funds loss\n    if (m_amountOfREPToDisputeWith != 808080) {\n      assert(disputeToken_mock.mint(this, amountToCreate));\n    }\n\n    return disputeToken_mock;\n  }\n\n  function getREPImpl() internal view returns (IERC20) {\n    return m_rep_mock;\n  }\n\n  function preDisputeCheck() internal {}\n}\n",
  "sourcePath": "/src/contracts/mocks/MockDisputer.sol",
  "ast": {
    "absolutePath": "/src/contracts/mocks/MockDisputer.sol",
    "exportedSymbols": {
      "MockDisputer": [
        2078
      ]
    },
    "id": 2079,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1968,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:17"
      },
      {
        "absolutePath": "/src/contracts/BaseDisputer.sol",
        "file": "../BaseDisputer.sol",
        "id": 1969,
        "nodeType": "ImportDirective",
        "scope": 2079,
        "sourceUnit": 253,
        "src": "26:29:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/src/contracts/IDisputer.sol",
        "file": "../IDisputer.sol",
        "id": 1970,
        "nodeType": "ImportDirective",
        "scope": 2079,
        "sourceUnit": 1803,
        "src": "56:26:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/src/contracts/mocks/MockERC20.sol",
        "file": "./MockERC20.sol",
        "id": 1971,
        "nodeType": "ImportDirective",
        "scope": 2079,
        "sourceUnit": 2205,
        "src": "83:25:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1972,
              "name": "BaseDisputer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 252,
              "src": "308:12:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseDisputer_$252",
                "typeString": "contract BaseDisputer"
              }
            },
            "id": 1973,
            "nodeType": "InheritanceSpecifier",
            "src": "308:12:17"
          }
        ],
        "contractDependencies": [
          252,
          1802,
          2204
        ],
        "contractKind": "contract",
        "documentation": "Version of disputer that doesn't really interact with Augur and instead\npretends to have disputed, by minting/burning tokens.\n * Used to test crowdsourcer.",
        "fullyImplemented": true,
        "id": 2078,
        "linearizedBaseContracts": [
          2078,
          252,
          1802
        ],
        "name": "MockDisputer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1975,
            "name": "m_rep_mock",
            "nodeType": "VariableDeclaration",
            "scope": 2078,
            "src": "325:27:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$2204",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 1974,
              "name": "MockERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2204,
              "src": "325:9:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$2204",
                "typeString": "contract MockERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1977,
            "name": "m_amountOfREPToDisputeWith",
            "nodeType": "VariableDeclaration",
            "scope": 2078,
            "src": "356:34:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1976,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "356:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2011,
              "nodeType": "Block",
              "src": "588:156:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1995,
                      "name": "m_rep_mock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1975,
                      "src": "594:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$2204",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1996,
                      "name": "rep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1981,
                      "src": "607:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$2204",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "594:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$2204",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 1998,
                  "nodeType": "ExpressionStatement",
                  "src": "594:16:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1999,
                      "name": "m_amountOfREPToDisputeWith",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1977,
                      "src": "616:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2000,
                      "name": "amountOfREPToDisputeWith",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1983,
                      "src": "645:24:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "616:53:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2002,
                  "nodeType": "ExpressionStatement",
                  "src": "616:53:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2004,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1979,
                        "src": "685:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2005,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1985,
                        "src": "692:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Market_$1915",
                          "typeString": "contract Market"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2006,
                        "name": "feeWindowId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1987,
                        "src": "700:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2007,
                        "name": "payoutNumerators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1990,
                        "src": "713:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2008,
                        "name": "invalid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1992,
                        "src": "731:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_Market_$1915",
                          "typeString": "contract Market"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2003,
                      "name": "baseInit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "676:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_Market_$1915_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,contract Market,uint256,uint256[] memory,bool)"
                      }
                    },
                    "id": 2009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "676:63:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2010,
                  "nodeType": "ExpressionStatement",
                  "src": "676:63:17"
                }
              ]
            },
            "documentation": null,
            "id": 2012,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1979,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2012,
                  "src": "412:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1978,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1981,
                  "name": "rep",
                  "nodeType": "VariableDeclaration",
                  "scope": 2012,
                  "src": "431:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MockERC20_$2204",
                    "typeString": "contract MockERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1980,
                    "name": "MockERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2204,
                    "src": "431:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$2204",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1983,
                  "name": "amountOfREPToDisputeWith",
                  "nodeType": "VariableDeclaration",
                  "scope": 2012,
                  "src": "450:32:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1982,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "450:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1985,
                  "name": "market",
                  "nodeType": "VariableDeclaration",
                  "scope": 2012,
                  "src": "488:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Market_$1915",
                    "typeString": "contract Market"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1984,
                    "name": "Market",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1915,
                    "src": "488:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Market_$1915",
                      "typeString": "contract Market"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1987,
                  "name": "feeWindowId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2012,
                  "src": "507:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "507:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1990,
                  "name": "payoutNumerators",
                  "nodeType": "VariableDeclaration",
                  "scope": 2012,
                  "src": "532:26:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1988,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "532:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1989,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "532:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1992,
                  "name": "invalid",
                  "nodeType": "VariableDeclaration",
                  "scope": 2012,
                  "src": "564:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1991,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "564:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "406:174:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 1994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "588:0:17"
            },
            "scope": 2078,
            "src": "395:349:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2064,
              "nodeType": "Block",
              "src": "797:523:17",
              "statements": [
                {
                  "assignments": [
                    2018
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2018,
                      "name": "amountToCreate",
                      "nodeType": "VariableDeclaration",
                      "scope": 2065,
                      "src": "803:22:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2017,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "803:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2020,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2019,
                    "name": "m_amountOfREPToDisputeWith",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1977,
                    "src": "828:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "803:51:17"
                },
                {
                  "assignments": [
                    2022
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2022,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2065,
                      "src": "860:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2021,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "860:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2027,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2025,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3179,
                        "src": "899:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockDisputer_$2078",
                          "typeString": "contract MockDisputer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockDisputer_$2078",
                          "typeString": "contract MockDisputer"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2023,
                        "name": "m_rep_mock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1975,
                        "src": "878:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$2204",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 2024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2570,
                      "src": "878:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "878:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "860:44:17"
                },
                {
                  "assignments": [
                    2029
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2029,
                      "name": "amountToDestroy",
                      "nodeType": "VariableDeclaration",
                      "scope": 2065,
                      "src": "910:23:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2028,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "910:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2036,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2030,
                        "name": "amountToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2018,
                        "src": "936:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2031,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2022,
                        "src": "953:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "936:24:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "id": 2034,
                      "name": "amountToCreate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2018,
                      "src": "973:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "936:51:17",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 2033,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2022,
                      "src": "963:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "910:77:17"
                },
                {
                  "assignments": [
                    2038
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2038,
                      "name": "disputeToken_mock",
                      "nodeType": "VariableDeclaration",
                      "scope": 2065,
                      "src": "1018:27:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$2204",
                        "typeString": "contract MockERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2037,
                        "name": "MockERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2204,
                        "src": "1018:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$2204",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2042,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1048:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockERC20_$2204_$",
                        "typeString": "function () returns (contract MockERC20)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2039,
                        "name": "MockERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2204,
                        "src": "1052:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$2204",
                          "typeString": "contract MockERC20"
                        }
                      }
                    },
                    "id": 2041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1048:15:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$2204",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1018:45:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2046,
                        "name": "amountToDestroy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2029,
                        "src": "1085:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2043,
                        "name": "m_rep_mock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1975,
                        "src": "1069:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$2204",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 2045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2990,
                      "src": "1069:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1069:32:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2048,
                  "nodeType": "ExpressionStatement",
                  "src": "1069:32:17"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2049,
                      "name": "m_amountOfREPToDisputeWith",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1977,
                      "src": "1180:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "383038303830",
                      "id": 2050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1210:6:17",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_808080_by_1",
                        "typeString": "int_const 808080"
                      },
                      "value": "808080"
                    },
                    "src": "1180:36:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2061,
                  "nodeType": "IfStatement",
                  "src": "1176:109:17",
                  "trueBody": {
                    "id": 2060,
                    "nodeType": "Block",
                    "src": "1218:67:17",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2055,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3179,
                                  "src": "1256:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockDisputer_$2078",
                                    "typeString": "contract MockDisputer"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 2056,
                                  "name": "amountToCreate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2018,
                                  "src": "1262:14:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockDisputer_$2078",
                                    "typeString": "contract MockDisputer"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2053,
                                  "name": "disputeToken_mock",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2038,
                                  "src": "1233:17:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockERC20_$2204",
                                    "typeString": "contract MockERC20"
                                  }
                                },
                                "id": 2054,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mint",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3031,
                                "src": "1233:22:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 2057,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1233:44:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2052,
                            "name": "assert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3105,
                            "src": "1226:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 2058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1226:52:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2059,
                        "nodeType": "ExpressionStatement",
                        "src": "1226:52:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2062,
                    "name": "disputeToken_mock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2038,
                    "src": "1298:17:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$2204",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "functionReturnParameters": 2016,
                  "id": 2063,
                  "nodeType": "Return",
                  "src": "1291:24:17"
                }
              ]
            },
            "documentation": null,
            "id": 2065,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "disputeImpl",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2013,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "768:2:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 2016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2015,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2065,
                  "src": "789:6:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3101",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2014,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3101,
                    "src": "789:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3101",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "788:8:17"
            },
            "scope": 2078,
            "src": "748:572:17",
            "stateMutability": "nonpayable",
            "superFunction": 248,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2072,
              "nodeType": "Block",
              "src": "1377:28:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2070,
                    "name": "m_rep_mock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1975,
                    "src": "1390:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$2204",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "functionReturnParameters": 2069,
                  "id": 2071,
                  "nodeType": "Return",
                  "src": "1383:17:17"
                }
              ]
            },
            "documentation": null,
            "id": 2073,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getREPImpl",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2066,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1343:2:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 2069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2068,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2073,
                  "src": "1369:6:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3101",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2067,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3101,
                    "src": "1369:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3101",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1368:8:17"
            },
            "scope": 2078,
            "src": "1324:81:17",
            "stateMutability": "view",
            "superFunction": 243,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2076,
              "nodeType": "Block",
              "src": "1445:2:17",
              "statements": []
            },
            "documentation": null,
            "id": 2077,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "preDisputeCheck",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1433:2:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 2075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1445:0:17"
            },
            "scope": 2078,
            "src": "1409:38:17",
            "stateMutability": "nonpayable",
            "superFunction": 251,
            "visibility": "internal"
          }
        ],
        "scope": 2079,
        "src": "283:1166:17"
      }
    ],
    "src": "0:1450:17"
  },
  "legacyAST": {
    "absolutePath": "/src/contracts/mocks/MockDisputer.sol",
    "exportedSymbols": {
      "MockDisputer": [
        2078
      ]
    },
    "id": 2079,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1968,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:17"
      },
      {
        "absolutePath": "/src/contracts/BaseDisputer.sol",
        "file": "../BaseDisputer.sol",
        "id": 1969,
        "nodeType": "ImportDirective",
        "scope": 2079,
        "sourceUnit": 253,
        "src": "26:29:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/src/contracts/IDisputer.sol",
        "file": "../IDisputer.sol",
        "id": 1970,
        "nodeType": "ImportDirective",
        "scope": 2079,
        "sourceUnit": 1803,
        "src": "56:26:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/src/contracts/mocks/MockERC20.sol",
        "file": "./MockERC20.sol",
        "id": 1971,
        "nodeType": "ImportDirective",
        "scope": 2079,
        "sourceUnit": 2205,
        "src": "83:25:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1972,
              "name": "BaseDisputer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 252,
              "src": "308:12:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseDisputer_$252",
                "typeString": "contract BaseDisputer"
              }
            },
            "id": 1973,
            "nodeType": "InheritanceSpecifier",
            "src": "308:12:17"
          }
        ],
        "contractDependencies": [
          252,
          1802,
          2204
        ],
        "contractKind": "contract",
        "documentation": "Version of disputer that doesn't really interact with Augur and instead\npretends to have disputed, by minting/burning tokens.\n * Used to test crowdsourcer.",
        "fullyImplemented": true,
        "id": 2078,
        "linearizedBaseContracts": [
          2078,
          252,
          1802
        ],
        "name": "MockDisputer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1975,
            "name": "m_rep_mock",
            "nodeType": "VariableDeclaration",
            "scope": 2078,
            "src": "325:27:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$2204",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 1974,
              "name": "MockERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2204,
              "src": "325:9:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$2204",
                "typeString": "contract MockERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1977,
            "name": "m_amountOfREPToDisputeWith",
            "nodeType": "VariableDeclaration",
            "scope": 2078,
            "src": "356:34:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1976,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "356:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2011,
              "nodeType": "Block",
              "src": "588:156:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1995,
                      "name": "m_rep_mock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1975,
                      "src": "594:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$2204",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1996,
                      "name": "rep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1981,
                      "src": "607:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$2204",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "594:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$2204",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 1998,
                  "nodeType": "ExpressionStatement",
                  "src": "594:16:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1999,
                      "name": "m_amountOfREPToDisputeWith",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1977,
                      "src": "616:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2000,
                      "name": "amountOfREPToDisputeWith",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1983,
                      "src": "645:24:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "616:53:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2002,
                  "nodeType": "ExpressionStatement",
                  "src": "616:53:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2004,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1979,
                        "src": "685:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2005,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1985,
                        "src": "692:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Market_$1915",
                          "typeString": "contract Market"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2006,
                        "name": "feeWindowId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1987,
                        "src": "700:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2007,
                        "name": "payoutNumerators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1990,
                        "src": "713:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2008,
                        "name": "invalid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1992,
                        "src": "731:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_Market_$1915",
                          "typeString": "contract Market"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2003,
                      "name": "baseInit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "676:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_Market_$1915_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,contract Market,uint256,uint256[] memory,bool)"
                      }
                    },
                    "id": 2009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "676:63:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2010,
                  "nodeType": "ExpressionStatement",
                  "src": "676:63:17"
                }
              ]
            },
            "documentation": null,
            "id": 2012,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1979,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2012,
                  "src": "412:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1978,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1981,
                  "name": "rep",
                  "nodeType": "VariableDeclaration",
                  "scope": 2012,
                  "src": "431:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MockERC20_$2204",
                    "typeString": "contract MockERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1980,
                    "name": "MockERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2204,
                    "src": "431:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$2204",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1983,
                  "name": "amountOfREPToDisputeWith",
                  "nodeType": "VariableDeclaration",
                  "scope": 2012,
                  "src": "450:32:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1982,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "450:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1985,
                  "name": "market",
                  "nodeType": "VariableDeclaration",
                  "scope": 2012,
                  "src": "488:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Market_$1915",
                    "typeString": "contract Market"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1984,
                    "name": "Market",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1915,
                    "src": "488:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Market_$1915",
                      "typeString": "contract Market"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1987,
                  "name": "feeWindowId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2012,
                  "src": "507:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "507:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1990,
                  "name": "payoutNumerators",
                  "nodeType": "VariableDeclaration",
                  "scope": 2012,
                  "src": "532:26:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1988,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "532:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1989,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "532:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1992,
                  "name": "invalid",
                  "nodeType": "VariableDeclaration",
                  "scope": 2012,
                  "src": "564:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1991,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "564:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "406:174:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 1994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "588:0:17"
            },
            "scope": 2078,
            "src": "395:349:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2064,
              "nodeType": "Block",
              "src": "797:523:17",
              "statements": [
                {
                  "assignments": [
                    2018
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2018,
                      "name": "amountToCreate",
                      "nodeType": "VariableDeclaration",
                      "scope": 2065,
                      "src": "803:22:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2017,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "803:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2020,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2019,
                    "name": "m_amountOfREPToDisputeWith",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1977,
                    "src": "828:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "803:51:17"
                },
                {
                  "assignments": [
                    2022
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2022,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2065,
                      "src": "860:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2021,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "860:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2027,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2025,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3179,
                        "src": "899:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockDisputer_$2078",
                          "typeString": "contract MockDisputer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockDisputer_$2078",
                          "typeString": "contract MockDisputer"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2023,
                        "name": "m_rep_mock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1975,
                        "src": "878:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$2204",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 2024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2570,
                      "src": "878:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "878:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "860:44:17"
                },
                {
                  "assignments": [
                    2029
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2029,
                      "name": "amountToDestroy",
                      "nodeType": "VariableDeclaration",
                      "scope": 2065,
                      "src": "910:23:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2028,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "910:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2036,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2030,
                        "name": "amountToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2018,
                        "src": "936:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2031,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2022,
                        "src": "953:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "936:24:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "id": 2034,
                      "name": "amountToCreate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2018,
                      "src": "973:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "936:51:17",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 2033,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2022,
                      "src": "963:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "910:77:17"
                },
                {
                  "assignments": [
                    2038
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2038,
                      "name": "disputeToken_mock",
                      "nodeType": "VariableDeclaration",
                      "scope": 2065,
                      "src": "1018:27:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$2204",
                        "typeString": "contract MockERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2037,
                        "name": "MockERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2204,
                        "src": "1018:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$2204",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2042,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1048:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockERC20_$2204_$",
                        "typeString": "function () returns (contract MockERC20)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2039,
                        "name": "MockERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2204,
                        "src": "1052:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$2204",
                          "typeString": "contract MockERC20"
                        }
                      }
                    },
                    "id": 2041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1048:15:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$2204",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1018:45:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2046,
                        "name": "amountToDestroy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2029,
                        "src": "1085:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2043,
                        "name": "m_rep_mock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1975,
                        "src": "1069:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$2204",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 2045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2990,
                      "src": "1069:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1069:32:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2048,
                  "nodeType": "ExpressionStatement",
                  "src": "1069:32:17"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2049,
                      "name": "m_amountOfREPToDisputeWith",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1977,
                      "src": "1180:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "383038303830",
                      "id": 2050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1210:6:17",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_808080_by_1",
                        "typeString": "int_const 808080"
                      },
                      "value": "808080"
                    },
                    "src": "1180:36:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2061,
                  "nodeType": "IfStatement",
                  "src": "1176:109:17",
                  "trueBody": {
                    "id": 2060,
                    "nodeType": "Block",
                    "src": "1218:67:17",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2055,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3179,
                                  "src": "1256:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockDisputer_$2078",
                                    "typeString": "contract MockDisputer"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 2056,
                                  "name": "amountToCreate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2018,
                                  "src": "1262:14:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockDisputer_$2078",
                                    "typeString": "contract MockDisputer"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2053,
                                  "name": "disputeToken_mock",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2038,
                                  "src": "1233:17:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockERC20_$2204",
                                    "typeString": "contract MockERC20"
                                  }
                                },
                                "id": 2054,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mint",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3031,
                                "src": "1233:22:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 2057,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1233:44:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2052,
                            "name": "assert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3105,
                            "src": "1226:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 2058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1226:52:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2059,
                        "nodeType": "ExpressionStatement",
                        "src": "1226:52:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2062,
                    "name": "disputeToken_mock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2038,
                    "src": "1298:17:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$2204",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "functionReturnParameters": 2016,
                  "id": 2063,
                  "nodeType": "Return",
                  "src": "1291:24:17"
                }
              ]
            },
            "documentation": null,
            "id": 2065,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "disputeImpl",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2013,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "768:2:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 2016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2015,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2065,
                  "src": "789:6:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3101",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2014,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3101,
                    "src": "789:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3101",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "788:8:17"
            },
            "scope": 2078,
            "src": "748:572:17",
            "stateMutability": "nonpayable",
            "superFunction": 248,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2072,
              "nodeType": "Block",
              "src": "1377:28:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2070,
                    "name": "m_rep_mock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1975,
                    "src": "1390:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$2204",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "functionReturnParameters": 2069,
                  "id": 2071,
                  "nodeType": "Return",
                  "src": "1383:17:17"
                }
              ]
            },
            "documentation": null,
            "id": 2073,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getREPImpl",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2066,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1343:2:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 2069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2068,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2073,
                  "src": "1369:6:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3101",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2067,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3101,
                    "src": "1369:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3101",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1368:8:17"
            },
            "scope": 2078,
            "src": "1324:81:17",
            "stateMutability": "view",
            "superFunction": 243,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2076,
              "nodeType": "Block",
              "src": "1445:2:17",
              "statements": []
            },
            "documentation": null,
            "id": 2077,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "preDisputeCheck",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1433:2:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 2075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1445:0:17"
            },
            "scope": 2078,
            "src": "1409:38:17",
            "stateMutability": "nonpayable",
            "superFunction": 251,
            "visibility": "internal"
          }
        ],
        "scope": 2079,
        "src": "283:1166:17"
      }
    ],
    "src": "0:1450:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-11-01T04:24:01.104Z"
}